#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π.
–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç WB CSV —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Stock Tracker CSV.
"""

import pandas as pd
import sys
from collections import defaultdict

print("="*80)
print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–ô")
print("="*80)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö WB
print("\n1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö WB CSV...")
wb_df = pd.read_csv('27-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 21-10-2025 –ø–æ 27-10-2025_export.csv')
print(f"   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(wb_df)} —Å—Ç—Ä–æ–∫")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Stock Tracker
print("\n2Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Stock Tracker CSV...")
st_df = pd.read_csv('Stock Tracker - Stock Tracker (1).csv')
print(f"   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(st_df)} —Å—Ç—Ä–æ–∫")

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª—ã
problem_articles = [
    'Its1_2_3/50g',
    'Its2/50g',
    'Its2/50g+Aks5/20g'
]

print("\n3Ô∏è‚É£ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤:")
print("="*80)

for article in problem_articles:
    print(f"\nüì¶ –ê—Ä—Ç–∏–∫—É–ª: {article}")
    print("-"*60)
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ WB
    wb_article_data = wb_df[wb_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    
    if len(wb_article_data) == 0:
        print(f"   ‚ö†Ô∏è  –ê—Ä—Ç–∏–∫—É–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ WB –¥–∞–Ω–Ω—ã—Ö")
        continue
    
    print(f"\n   üìä WB –¥–∞–Ω–Ω—ã–µ ({len(wb_article_data)} —Å—Ç—Ä–æ–∫):")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å–∫–ª–∞–¥–∞–º
    warehouse_orders = {}
    warehouse_stock = {}
    total_orders_wb = 0
    total_stock_wb = 0
    
    for idx, row in wb_article_data.iterrows():
        warehouse = row['–°–∫–ª–∞–¥']
        orders = row['–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç']
        stock = row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç']
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º NaN
        if pd.isna(orders):
            orders = 0
        if pd.isna(stock):
            stock = 0
        
        warehouse_orders[warehouse] = warehouse_orders.get(warehouse, 0) + int(orders)
        warehouse_stock[warehouse] = warehouse_stock.get(warehouse, 0) + int(stock)
        
        total_orders_wb += int(orders)
        total_stock_wb += int(stock)
    
    print(f"      –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {total_orders_wb}")
    print(f"      –í—Å–µ–≥–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: {total_stock_wb}")
    print(f"      –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤: {len(warehouse_orders)}")
    
    print(f"\n      –ó–∞–∫–∞–∑—ã –ø–æ —Å–∫–ª–∞–¥–∞–º (—Ç–æ–ø-10):")
    sorted_warehouses = sorted(warehouse_orders.items(), key=lambda x: x[1], reverse=True)
    for wh, orders in sorted_warehouses[:10]:
        stock = warehouse_stock.get(wh, 0)
        print(f"         ‚Ä¢ {wh}: {orders} –∑–∞–∫–∞–∑–æ–≤, {stock} –æ—Å—Ç–∞—Ç–∫–æ–≤")
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ Stock Tracker
    st_article_data = st_df[st_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    
    if len(st_article_data) == 0:
        print(f"\n   ‚ö†Ô∏è  –ê—Ä—Ç–∏–∫—É–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Stock Tracker –¥–∞–Ω–Ω—ã—Ö")
        continue
    
    st_row = st_article_data.iloc[0]
    st_orders = st_row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)']
    st_stock = st_row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']
    
    print(f"\n   üìä Stock Tracker –¥–∞–Ω–Ω—ã–µ:")
    print(f"      –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {st_orders}")
    print(f"      –í—Å–µ–≥–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: {st_stock}")
    
    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–æ–≤ –∏–∑ Stock Tracker
    if pd.notna(st_row['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞']):
        st_warehouse_names = str(st_row['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞']).split('\n')
        st_warehouse_orders_str = str(st_row['–ó–∞–∫–∞–∑—ã —Å–æ —Å–∫–ª–∞–¥–∞']).split('\n') if pd.notna(st_row['–ó–∞–∫–∞–∑—ã —Å–æ —Å–∫–ª–∞–¥–∞']) else []
        st_warehouse_stock_str = str(st_row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ']).split('\n') if pd.notna(st_row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ']) else []
        
        print(f"      –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤: {len(st_warehouse_names)}")
        print(f"\n      –ó–∞–∫–∞–∑—ã –ø–æ —Å–∫–ª–∞–¥–∞–º:")
        
        st_orders_sum = 0
        st_stock_sum = 0
        
        for i, wh_name in enumerate(st_warehouse_names):
            wh_orders = int(st_warehouse_orders_str[i]) if i < len(st_warehouse_orders_str) and st_warehouse_orders_str[i].isdigit() else 0
            wh_stock = int(st_warehouse_stock_str[i]) if i < len(st_warehouse_stock_str) and st_warehouse_stock_str[i].isdigit() else 0
            
            st_orders_sum += wh_orders
            st_stock_sum += wh_stock
            
            if wh_orders > 0 or wh_stock > 0:
                print(f"         ‚Ä¢ {wh_name}: {wh_orders} –∑–∞–∫–∞–∑–æ–≤, {wh_stock} –æ—Å—Ç–∞—Ç–∫–æ–≤")
        
        print(f"\n      –°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å–∫–ª–∞–¥–∞–º: {st_orders_sum}")
        print(f"      –°—É–º–º–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ —Å–∫–ª–∞–¥–∞–º: {st_stock_sum}")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    print(f"\n   üîç –°–†–ê–í–ù–ï–ù–ò–ï:")
    print(f"      {'–ü–∞—Ä–∞–º–µ—Ç—Ä':<30} {'WB':>10} {'ST':>10} {'–†–∞–∑–Ω–∏—Ü–∞':>10} {'%':>8}")
    print(f"      {'-'*30} {'-'*10} {'-'*10} {'-'*10} {'-'*8}")
    
    orders_diff = total_orders_wb - st_orders
    orders_pct = (orders_diff / total_orders_wb * 100) if total_orders_wb != 0 else 0
    
    stock_diff = total_stock_wb - st_stock
    stock_pct = (stock_diff / total_stock_wb * 100) if total_stock_wb != 0 else 0
    
    print(f"      {'–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)':<30} {total_orders_wb:>10} {st_orders:>10} {orders_diff:>10} {orders_pct:>7.2f}%")
    print(f"      {'–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)':<30} {total_stock_wb:>10} {st_stock:>10} {stock_diff:>10} {stock_pct:>7.2f}%")
    
    if pd.notna(st_row['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞']):
        orders_sum_diff = total_orders_wb - st_orders_sum
        stock_sum_diff = total_stock_wb - st_stock_sum
        
        print(f"      {'–ó–∞–∫–∞–∑—ã (—Å—É–º–º–∞ –ø–æ —Å–∫–ª–∞–¥–∞–º)':<30} {total_orders_wb:>10} {st_orders_sum:>10} {orders_sum_diff:>10}")
        print(f"      {'–û—Å—Ç–∞—Ç–∫–∏ (—Å—É–º–º–∞ –ø–æ —Å–∫–ª–∞–¥–∞–º)':<30} {total_stock_wb:>10} {st_stock_sum:>10} {stock_sum_diff:>10}")
    
    # –í—ã–≤–æ–¥—ã
    print(f"\n   üí° –í–´–í–û–î–´:")
    
    if abs(orders_pct) > 5:
        print(f"      ‚ö†Ô∏è  –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –∑–∞–∫–∞–∑–∞—Ö: {orders_pct:.2f}%")
        
        if st_orders > total_orders_wb:
            print(f"      üî¥ Stock Tracker –ó–ê–í–´–®–ê–ï–¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {abs(orders_diff)}")
            print(f"      –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print(f"         1. –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø—Ä–∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏")
            print(f"         2. –ó–∞–∫–∞–∑—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
            print(f"         3. –í–∫–ª—é—á–µ–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã")
        else:
            print(f"      üü° Stock Tracker –ó–ê–ù–ò–ñ–ê–ï–¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {abs(orders_diff)}")
            print(f"      –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print(f"         1. –ù–µ –≤—Å–µ —Å–∫–ª–∞–¥—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è")
            print(f"         2. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —É–¥–∞–ª—è–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–∫–∞–∑—ã")
    else:
        print(f"      ‚úÖ –ó–∞–∫–∞–∑—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç (—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ {orders_pct:.2f}%)")
    
    if abs(stock_pct) > 5:
        print(f"      ‚ö†Ô∏è  –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –æ—Å—Ç–∞—Ç–∫–∞—Ö: {stock_pct:.2f}%")
    else:
        print(f"      ‚úÖ –û—Å—Ç–∞—Ç–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç (—Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ {stock_pct:.2f}%)")

print("\n" + "="*80)
print("4Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´")
print("="*80)

print("\nüéØ –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:")
print("   Stock Tracker –ó–ê–í–´–®–ê–ï–¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ 10-14%")
print("   –û—Å—Ç–∞—Ç–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

print("\nüîç –ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞:")
print("   –ó–∞–∫–∞–∑—ã –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø—Ä–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö")
print("   –í–æ–∑–º–æ–∂–Ω–æ, –æ–¥–∏–Ω –∑–∞–∫–∞–∑ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Å–∫–ª–∞–¥–∞–º")

print("\nüõ†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ:")
print("   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –≤ group_data_by_product()")
print("   2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑")
print("   3. –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é: —Å—É–º–º–∞ –ø–æ —Å–∫–ª–∞–¥–∞–º = –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
print("   4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID –∑–∞–∫–∞–∑–æ–≤ (gNumber) –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥—É–±–ª–µ–π")

print("\n" + "="*80)
