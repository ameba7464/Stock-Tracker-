#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Stock Tracker —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ WB
"""
import json
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from stock_tracker.core.calculator import StockCalculator
from test_stock_tracker_validation import StockTrackerValidator, ValidationResult

def test_real_wb_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π Stock Tracker —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ WB"""
    print("üî¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò WILDBERRIES")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ WB
    with open('real_wb_test_data.json', 'r', encoding='utf-8') as f:
        wb_data = json.load(f)
    
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(wb_data)} –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏–∑ WB")
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö Stock Tracker —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
    print("\nüîß –°–û–ó–î–ê–ù–ò–ï –°–ò–ú–£–õ–Ø–¶–ò–ò –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û STOCK TRACKER:")
    
    # –ë–µ—Ä—ë–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∞–º—ã—Ö –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_articles = [
        'Its1_2_3/50g',      # 24% –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (144 –∏–∑ 590)
        'ItsSport2/50g',     # 81% –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (1033 –∏–∑ 1268) - –ö–†–ò–¢–ò–ß–ù–û!
        'Its2/50g',          # –ù–µ–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (41 –∏–∑ 564)
    ]
    
    success_count = 0
    total_tests = len(test_articles)
    
    validator = StockTrackerValidator()
    
    for article in test_articles:
        if article not in wb_data:
            continue
            
        wb_article_data = wb_data[article]
        wb_stock = wb_article_data['stock']
        wb_orders = wb_article_data['orders']
        warehouses = wb_article_data['warehouses']
        
        print(f"\nüì¶ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: {article}")
        print(f"  WB –¥–∞–Ω–Ω—ã–µ: {wb_stock:.0f} –æ—Å—Ç–∞—Ç–∫–æ–≤, {wb_orders:.0f} –∑–∞–∫–∞–∑–æ–≤")
        print(f"  –°–∫–ª–∞–¥—ã: {', '.join(warehouses)}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é Stock Tracker —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
        # (–í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets)
        st_data = {
            article: {
                'stock': wb_stock,    # –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å!
                'orders': wb_orders,  # –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å!
                'warehouses': warehouses
            }
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–∞–µ—Ç –ª–∏ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
        marketplace_included = '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' in warehouses
        print(f"  –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –≤–∫–ª—é—á—ë–Ω: {'‚úÖ' if marketplace_included else '‚ùå'}")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        result = validator.validate_single_product(article, wb_article_data, st_data[article])
        
        if result.passed:
            print(f"  ‚úÖ –£–°–ü–ï–•: –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è {result.stock_diff_percent:.1f}%/{result.orders_diff_percent:.1f}%")
            success_count += 1
        else:
            print(f"  ‚ùå –û–®–ò–ë–ö–ê: –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è {result.stock_diff_percent:.1f}%/{result.orders_diff_percent:.1f}%")
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"  –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {success_count}/{total_tests}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(success_count/total_tests*100):.1f}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
    print(f"\nüö® –ê–ù–ê–õ–ò–ó –ö–†–ò–¢–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í:")
    
    critical_cases = [
        ('ItsSport2/50g', '81.5% —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å - –ö–†–ò–¢–ò–ß–ù–û!'),
        ('Its1_2_3/50g+Aks5/20g', '100% —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å'),
        ('ItsSport2/50g+Aks5/20g', '99.6% —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å'),
    ]
    
    for article, description in critical_cases:
        if article in wb_data:
            print(f"  ‚ö†Ô∏è  {article}: {description}")
            warehouses = wb_data[article]['warehouses']
            if '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' in warehouses:
                print(f"     ‚úÖ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö")
            else:
                print(f"     ‚ùå –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê!")
    
    print(f"\nüìà –í–õ–ò–Ø–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –≤–ª–∏—è–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
    total_marketplace_stock = 0
    total_marketplace_orders = 0
    
    for article, data in wb_data.items():
        warehouses = data['warehouses']
        if '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' in warehouses:
            # –ü—Ä–∏–º–µ—Ä–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞–µ–º –¥–æ–ª—é –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
            if article == 'ItsSport2/50g':
                marketplace_stock = 1033  # –ò–∑ –∞–Ω–∞–ª–∏–∑–∞
                marketplace_orders = 1
            elif article == 'Its1_2_3/50g':
                marketplace_stock = 144
                marketplace_orders = 5
            elif article == 'Its2/50g':
                marketplace_stock = 41
                marketplace_orders = 0
            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏
                marketplace_stock = data['stock'] * 0.8  # –ï—Å–ª–∏ –º–Ω–æ–≥–æ –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
                marketplace_orders = data['orders'] * 0.5
            
            total_marketplace_stock += marketplace_stock
            total_marketplace_orders += marketplace_orders
    
    print(f"  üìä –û–±—â–∏–π –æ–±—ä—ë–º –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:")
    print(f"     –û—Å—Ç–∞—Ç–∫–∏: ~{total_marketplace_stock:.0f} –µ–¥–∏–Ω–∏—Ü")
    print(f"     –ó–∞–∫–∞–∑—ã: ~{total_marketplace_orders:.0f} –∑–∞–∫–∞–∑–æ–≤")
    print(f"  üéØ –ë–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –±—ã –ü–û–¢–ï–†–Ø–ù–´!")
    
    if success_count == total_tests:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
    else:
        print(f"\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
        return False

if __name__ == "__main__":
    test_real_wb_data()