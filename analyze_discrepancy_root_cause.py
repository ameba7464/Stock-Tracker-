#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É CSV WB –∏ Google Sheets.
–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—é —Ü–µ–ø–æ—á–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
"""

import sys
import os
import csv
from collections import defaultdict

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from stock_tracker.core.calculator import is_real_warehouse


def analyze_csv_warehouses(csv_file):
    """–ê–Ω–∞–ª–∏–∑ —Å–∫–ª–∞–¥–æ–≤ –≤ CSV –æ—Ç Wildberries."""
    print("\n" + "="*100)
    print("üìä –®–ê–ì 1: –ê–ù–ê–õ–ò–ó CSV –§–ê–ô–õ–ê –û–¢ WILDBERRIES")
    print("="*100)
    
    products = defaultdict(lambda: {
        'total_orders': 0,
        'total_stock': 0,
        'warehouses': defaultdict(lambda: {'orders': 0, 'stock': 0})
    })
    
    with open(csv_file, 'r', encoding='utf-8-sig') as f:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞)
        f.readline()
        reader = csv.DictReader(f)
        
        for row in reader:
            article = row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞']
            wb_article = row['–ê—Ä—Ç–∏–∫—É–ª WB']
            warehouse = row['–°–∫–ª–∞–¥']
            
            # –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            try:
                orders = int(row['–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç']) if row['–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç'] else 0
            except:
                orders = 0
                
            try:
                stock = int(row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç']) if row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç'] else 0
            except:
                stock = 0
            
            # –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –ø–æ —Ç–æ–≤–∞—Ä—É
            products[article]['wb_article'] = wb_article
            products[article]['total_orders'] += orders
            products[article]['total_stock'] += stock
            products[article]['warehouses'][warehouse]['orders'] += orders
            products[article]['warehouses'][warehouse]['stock'] += stock
    
    print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(products)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ CSV")
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ –ø–µ—Ä–≤—ã–º 3 —Ç–æ–≤–∞—Ä–∞–º
    for article in list(products.keys())[:3]:
        data = products[article]
        print(f"\nüì¶ {article} (WB: {data['wb_article']})")
        print(f"   –ò–¢–û–ì–û: –ó–∞–∫–∞–∑—ã={data['total_orders']}, –û—Å—Ç–∞—Ç–∫–∏={data['total_stock']}")
        print(f"   –°–∫–ª–∞–¥–æ–≤: {len(data['warehouses'])}")
        
        # –î–µ—Ç–∞–ª–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º
        for wh_name, wh_data in sorted(data['warehouses'].items(), 
                                       key=lambda x: x[1]['stock'], 
                                       reverse=True):
            is_real = is_real_warehouse(wh_name)
            status = "‚úÖ –í–ö–õ–Æ–ß–ï–ù" if is_real else "‚ùå –û–¢–§–ò–õ–¨–¢–†–û–í–ê–ù"
            
            print(f"   - {wh_name}: –ó–∞–∫–∞–∑—ã={wh_data['orders']}, –û—Å—Ç–∞—Ç–∫–∏={wh_data['stock']} [{status}]")
    
    return products


def analyze_google_sheets_data(sheets_csv):
    """–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets."""
    print("\n" + "="*100)
    print("üìä –®–ê–ì 2: –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ò–ó GOOGLE SHEETS")
    print("="*100)
    
    products = {}
    
    with open(sheets_csv, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        
        for row in reader:
            article = row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞']
            wb_article = row['–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞']
            
            try:
                total_orders = int(row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'])
            except:
                total_orders = 0
                
            try:
                total_stock = int(row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'])
            except:
                total_stock = 0
            
            # –ü–∞—Ä—Å–∏–º —Å–∫–ª–∞–¥—ã (–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —è—á–µ–π–∫–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã \n)
            warehouse_names = row['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞'].split('\n')
            warehouse_orders = row['–ó–∞–∫–∞–∑—ã —Å–æ —Å–∫–ª–∞–¥–∞'].split('\n')
            warehouse_stocks = row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ'].split('\n')
            
            warehouses = {}
            for i, name in enumerate(warehouse_names):
                if name.strip():
                    try:
                        orders = int(warehouse_orders[i]) if i < len(warehouse_orders) else 0
                    except:
                        orders = 0
                    try:
                        stock = int(warehouse_stocks[i]) if i < len(warehouse_stocks) else 0
                    except:
                        stock = 0
                    warehouses[name.strip()] = {'orders': orders, 'stock': stock}
            
            products[article] = {
                'wb_article': wb_article,
                'total_orders': total_orders,
                'total_stock': total_stock,
                'warehouses': warehouses
            }
    
    print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ Google Sheets")
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ –ø–µ—Ä–≤—ã–º 3 —Ç–æ–≤–∞—Ä–∞–º
    for article in list(products.keys())[:3]:
        data = products[article]
        print(f"\nüì¶ {article} (WB: {data['wb_article']})")
        print(f"   –ò–¢–û–ì–û: –ó–∞–∫–∞–∑—ã={data['total_orders']}, –û—Å—Ç–∞—Ç–∫–∏={data['total_stock']}")
        print(f"   –°–∫–ª–∞–¥–æ–≤: {len(data['warehouses'])}")
        
        for wh_name, wh_data in sorted(data['warehouses'].items(), 
                                       key=lambda x: x[1]['stock'], 
                                       reverse=True):
            print(f"   - {wh_name}: –ó–∞–∫–∞–∑—ã={wh_data['orders']}, –û—Å—Ç–∞—Ç–∫–∏={wh_data['stock']}")
    
    return products


def compare_data(wb_products, sheets_products):
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π."""
    print("\n" + "="*100)
    print("üîç –®–ê–ì 3: –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò –ü–û–ò–°–ö –†–ê–°–•–û–ñ–î–ï–ù–ò–ô")
    print("="*100)
    
    for article in list(wb_products.keys())[:3]:
        wb_data = wb_products[article]
        sheets_data = sheets_products.get(article)
        
        if not sheets_data:
            print(f"\n‚ùå {article}: –ù–ï–¢ –í GOOGLE SHEETS!")
            continue
        
        print(f"\nüì¶ {article}")
        print(f"   WB CSV:     –ó–∞–∫–∞–∑—ã={wb_data['total_orders']}, –û—Å—Ç–∞—Ç–∫–∏={wb_data['total_stock']}")
        print(f"   Sheets:     –ó–∞–∫–∞–∑—ã={sheets_data['total_orders']}, –û—Å—Ç–∞—Ç–∫–∏={sheets_data['total_stock']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
        orders_diff = wb_data['total_orders'] - sheets_data['total_orders']
        stock_diff = wb_data['total_stock'] - sheets_data['total_stock']
        
        if orders_diff != 0 or stock_diff != 0:
            print(f"   ‚ö†Ô∏è –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: –ó–∞–∫–∞–∑—ã {orders_diff:+d}, –û—Å—Ç–∞—Ç–∫–∏ {stock_diff:+d}")
        else:
            print(f"   ‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
        
        # –ê–Ω–∞–ª–∏–∑ —Å–∫–ª–∞–¥–æ–≤
        wb_warehouses = set(wb_data['warehouses'].keys())
        sheets_warehouses = set(sheets_data['warehouses'].keys())
        
        # –°–∫–ª–∞–¥—ã —Ç–æ–ª—å–∫–æ –≤ WB CSV
        only_in_wb = wb_warehouses - sheets_warehouses
        if only_in_wb:
            print(f"\n   üö® –°–ö–õ–ê–î–´ –¢–û–õ–¨–ö–û –í WB CSV (–ù–ï –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–´):")
            for wh in only_in_wb:
                wh_data = wb_data['warehouses'][wh]
                is_real = is_real_warehouse(wh)
                status = "–¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω" if is_real else "–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω"
                
                print(f"      - {wh}: –ó–∞–∫–∞–∑—ã={wh_data['orders']}, –û—Å—Ç–∞—Ç–∫–∏={wh_data['stock']}")
                print(f"        is_real_warehouse() = {is_real} ({status})")
        
        # –°–∫–ª–∞–¥—ã —Ç–æ–ª—å–∫–æ –≤ Sheets
        only_in_sheets = sheets_warehouses - wb_warehouses
        if only_in_sheets:
            print(f"\n   ‚ÑπÔ∏è –°–∫–ª–∞–¥—ã —Ç–æ–ª—å–∫–æ –≤ Google Sheets:")
            for wh in only_in_sheets:
                wh_data = sheets_data['warehouses'][wh]
                print(f"      - {wh}: –ó–∞–∫–∞–∑—ã={wh_data['orders']}, –û—Å—Ç–∞—Ç–∫–∏={wh_data['stock']}")
        
        # –û–±—â–∏–µ —Å–∫–ª–∞–¥—ã —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏
        common = wb_warehouses & sheets_warehouses
        if common:
            print(f"\n   üìä –û–±—â–∏–µ —Å–∫–ª–∞–¥—ã:")
            for wh in common:
                wb_wh = wb_data['warehouses'][wh]
                sheets_wh = sheets_data['warehouses'][wh]
                
                orders_match = "‚úÖ" if wb_wh['orders'] == sheets_wh['orders'] else "‚ùå"
                stock_match = "‚úÖ" if wb_wh['stock'] == sheets_wh['stock'] else "‚ùå"
                
                print(f"      - {wh}:")
                print(f"        WB:     –ó–∞–∫–∞–∑—ã={wb_wh['orders']} {orders_match}, –û—Å—Ç–∞—Ç–∫–∏={wb_wh['stock']} {stock_match}")
                print(f"        Sheets: –ó–∞–∫–∞–∑—ã={sheets_wh['orders']}, –û—Å—Ç–∞—Ç–∫–∏={sheets_wh['stock']}")


if __name__ == "__main__":
    import sys
    sys.stdout.reconfigure(encoding='utf-8')
    
    wb_csv = r"c:\Users\miros\Downloads\28-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 22-10-2025 –ø–æ 28-10-2025_export (1).csv"
    sheets_csv = r"c:\Users\miros\Downloads\Stock Tracker - Stock Tracker (5).csv"
    
    print("ANALIZ RASHOZHDENIY DANNYKH")
    print("="*100)
    
    # –®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ CSV –æ—Ç WB
    wb_products = analyze_csv_warehouses(wb_csv)
    
    # –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑ Google Sheets
    sheets_products = analyze_google_sheets_data(sheets_csv)
    
    # –®–∞–≥ 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    compare_data(wb_products, sheets_products)
    
    print("\n" + "="*100)
    print("‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù")
    print("="*100)
