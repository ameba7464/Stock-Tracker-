#!/usr/bin/env python
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è Google Sheets –ø–æ—Å–ª–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π."""
import sys
import os
import gspread

# –ü—É—Ç—å –∫ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
service_account_path = os.path.join(os.path.dirname(__file__), 'config', 'service-account.json')

def main():
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets - —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n")
    print("=" * 60)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    gc = gspread.service_account(filename=service_account_path)
    spreadsheet = gc.open_by_key("1baGNbGKDSvFA1Cghh08onoG9PDGnO19UFzXhdKC9Sho")
    worksheet = spreadsheet.worksheet("Stock Tracker")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    all_values = worksheet.get_all_values()
    
    if not all_values:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è!")
        return
    
    print(f"\nüìã –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_values)}")
    
    if len(all_values) < 1:
        print("‚ùå –ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤!")
        return
    
    headers = all_values[0]
    print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {headers}\n")
    
    if len(all_values) < 2:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏)!")
        return
    
    # –ù–∞–π–¥—ë–º –∏–Ω–¥–µ–∫—Å—ã –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
    try:
        article_idx = headers.index("–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞")
        warehouse_idx = headers.index("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞")
        orders_idx = headers.index("–ó–∞–∫–∞–∑—ã —Å–æ —Å–∫–ª–∞–¥–∞")
        stock_idx = headers.index("–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ")
    except ValueError as e:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫: {e}")
        return
    
    print(f"\nüìã –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_values) - 1}")
    print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {', '.join(headers)}\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –í–ò–ó–£–ê–õ–¨–ù–û–ì–û –†–ê–ó–î–ï–õ–ï–ù–ò–Ø –°–ö–õ–ê–î–û–í\n")
    
    for row_idx in range(1, min(4, len(all_values))):  # –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞
        row = all_values[row_idx]
        article = row[article_idx] if article_idx < len(row) else ""
        warehouses = row[warehouse_idx] if warehouse_idx < len(row) else ""
        orders = row[orders_idx] if orders_idx < len(row) else ""
        stock = row[stock_idx] if stock_idx < len(row) else ""
        
        print(f"–¢–æ–≤–∞—Ä: {article}")
        print(f"‚îÄ" * 60)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–≤–æ–π–Ω—ã—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
        warehouse_list = warehouses.split("\n") if warehouses else []
        orders_list = orders.split("\n") if orders else []
        stock_list = stock.split("\n") if stock else []
        
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–ª–∞–¥–æ–≤: {len([w for w in warehouse_list if w.strip()])}")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫: {len([w for w in warehouse_list if not w.strip()])}")
        
        if "" in warehouse_list:
            print("  ‚úÖ –í–∏–∑—É–∞–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! (–µ—Å—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)")
        else:
            print("  ‚ö†Ô∏è  –ù–µ—Ç –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É —Å–∫–ª–∞–¥–∞–º–∏")
        
        print(f"\n  –ü–µ—Ä–≤—ã–µ 5 —Å–∫–ª–∞–¥–æ–≤:")
        for i, (wh, ord, st) in enumerate(zip(warehouse_list[:5], orders_list[:5], stock_list[:5])):
            if wh.strip():
                print(f"    {i+1}. {wh}: –∑–∞–∫–∞–∑—ã={ord}, –æ—Å—Ç–∞—Ç–æ–∫={st}")
            else:
                print(f"    {i+1}. [–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞]")
        
        print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—é "–û–±—É—Ö–æ–≤–æ –ú–ü"
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò '–û–±—É—Ö–æ–≤–æ –ú–ü'\n")
    
    found_obuhovo = False
    found_marketplace = False
    
    for row_idx in range(1, len(all_values)):
        row = all_values[row_idx]
        warehouses = row[warehouse_idx] if warehouse_idx < len(row) else ""
        article = row[article_idx] if article_idx < len(row) else ""
        
        if "–û–±—É—Ö–æ–≤–æ" in warehouses:
            found_obuhovo = True
            print(f"‚ö†Ô∏è  –¢–æ–≤–∞—Ä '{article}': –Ω–∞–π–¥–µ–Ω–æ '–û–±—É—Ö–æ–≤–æ' –≤ —Å–∫–ª–∞–¥–∞—Ö!")
            
            # –ü–æ–∫–∞–∂–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            warehouse_lines = [w.strip() for w in warehouses.split("\n") if w.strip()]
            for wh in warehouse_lines:
                if "–û–±—É—Ö–æ–≤–æ" in wh or "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å" in wh:
                    print(f"     - {wh}")
        
        if "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å" in warehouses:
            found_marketplace = True
    
    if not found_obuhovo:
        print("‚úÖ '–û–±—É—Ö–æ–≤–æ –ú–ü' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    
    if found_marketplace:
        print("‚úÖ '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ")
    
    print("\n" + "=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
