#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π - –ø—Ä—è–º—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ API WB
"""

import asyncio
import sys
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, 'c:/Users/miros/Downloads/Stock Tracker/Stock-Tracker/src')

from stock_tracker.api.client import WildberriesAPIClient
from stock_tracker.services.dual_api_stock_fetcher import DualAPIStockFetcher
from stock_tracker.utils.config import get_config
from stock_tracker.database.operations import SheetsOperations
from stock_tracker.database.sheets import GoogleSheetsClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
try:
    sys.stdout.reconfigure(encoding='utf-8')
except:
    pass

# –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = get_config()

# –ê—Ä—Ç–∏–∫—É–ª—ã —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏
PROBLEM_ARTICLES = [
    {
        'supplier_article': 'Its1_2_3/50g',
        'nm_id': 163383326,
        'wb_orders': 65,
        'tracker_orders': 103,
        'wb_stock': 3275,
        'tracker_stock': 3184
    },
    {
        'supplier_article': 'Its2/50g',
        'nm_id': 163383327,
        'wb_orders': 52,
        'tracker_orders': 61,
        'wb_stock': 2370,
        'tracker_stock': 2072
    },
    {
        'supplier_article': 'Its2/50g+Aks5/20g',
        'nm_id': 262310317,
        'wb_orders': 16,
        'tracker_orders': 22,
        'wb_stock': None,  # –ù—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å
        'tracker_stock': 185
    }
]


async def debug_article(article_info):
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞"""
    print("=" * 100)
    print(f"üîç –ê–ù–ê–õ–ò–ó: {article_info['supplier_article']} (NM ID: {article_info['nm_id']})")
    print("=" * 100)
    print()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç—ã
    wb_client = WildberriesAPIClient(config.wildberries_api_key)
    dual_api = DualAPIStockFetcher(config.wildberries_api_key)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã —á–µ—Ä–µ–∑ Supplier Orders API
    print("üì¶ 1. –ó–ê–ö–ê–ó–´ (Supplier Orders API v1)")
    print("-" * 100)
    
    date_from = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
    date_to = datetime.now().strftime('%Y-%m-%d')
    
    try:
        orders_list = await wb_client.get_supplier_orders(date_from=date_from)
        
        # orders_list - —ç—Ç–æ —É–∂–µ —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
        article_orders = [
            order for order in orders_list
            if order.get('nmId') == article_info['nm_id']
        ]
        
        # –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
        active_orders = []
        cancelled_orders = []
        
        for order in article_orders:
            is_cancel = order.get('isCancel', False)
            status = order.get('status', '')
            
            if is_cancel or status in ['–û—Ç–º–µ–Ω—ë–Ω –∫–ª–∏–µ–Ω—Ç–æ–º', '–û—Ç–º–µ–Ω—ë–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º', '–û—Ç–º–µ–Ω—ë–Ω']:
                cancelled_orders.append(order)
            else:
                active_orders.append(order)
        
        print(f"   ‚úÖ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ API: {len(article_orders)}")
        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(active_orders)}")
        print(f"   ‚ùå –û—Ç–º–µ–Ω—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(cancelled_orders)}")
        print()
        
        if len(active_orders) > 0:
            print(f"   üìã –ü–µ—Ä–≤—ã–µ 5 –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:")
            for i, order in enumerate(active_orders[:5], 1):
                order_date = order.get('date', 'N/A')
                warehouse = order.get('warehouseName', 'N/A')
                status = order.get('status', 'N/A')
                print(f"      {i}. –î–∞—Ç–∞: {order_date}, –°–∫–ª–∞–¥: {warehouse}, –°—Ç–∞—Ç—É—Å: {status}")
        
        print()
        print(f"   üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤:")
        print(f"      WB –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (24-30 –æ–∫—Ç): {article_info['wb_orders']}")
        print(f"      Tracker (Google Sheets):   {article_info['tracker_orders']}")
        print(f"      API (–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã):     {len(active_orders)}")
        print()
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
        if len(active_orders) == article_info['tracker_orders']:
            print(f"   ‚úÖ TRACKER –°–û–í–ü–ê–î–ê–ï–¢ –° API! ({len(active_orders)} –∑–∞–∫–∞–∑–æ–≤)")
        elif len(active_orders) == article_info['wb_orders']:
            print(f"   ‚úÖ WB –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–û–í–ü–ê–î–ê–ï–¢ –° API! ({len(active_orders)} –∑–∞–∫–∞–∑–æ–≤)")
        else:
            print(f"   ‚ö†Ô∏è  –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç {len(active_orders)} –∑–∞–∫–∞–∑–æ–≤")
        
        print()
        
    except Exception as e:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")
        print()
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ Dual API (FBO + FBS)
    print("üì¶ 2. –û–°–¢–ê–¢–ö–ò (Dual API: Statistics v1 + Marketplace v3)")
    print("-" * 100)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ (–°–ò–ù–•–†–û–ù–ù–´–ô –º–µ—Ç–æ–¥)
        combined_stocks = dual_api.get_combined_stocks_by_article(
            supplier_article=article_info['supplier_article']
        )
        
        if combined_stocks:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–∫–ª–∞–¥–æ–≤ –≤ API: {len(combined_stocks)}")
            print()
            
            # –°—á–∏—Ç–∞–µ–º –æ–±—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏
            total_fbo = 0
            total_fbs = 0
            
            print(f"   üìã –û—Å—Ç–∞—Ç–∫–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º:")
            for i, stock in enumerate(list(combined_stocks)[:10], 1):  # –ü–µ—Ä–≤—ã–µ 10
                warehouse = stock.get('warehouse_name', 'N/A')
                qty = stock.get('quantity', 0)
                source = stock.get('source', 'N/A')
                
                if source == 'FBO':
                    total_fbo += qty
                else:
                    total_fbs += qty
                
                print(f"      {i}. {warehouse:40} | {qty:6} —à—Ç | {source}")
            
            if len(combined_stocks) > 10:
                print(f"      ... –µ—â—ë {len(combined_stocks) - 10} —Å–∫–ª–∞–¥–æ–≤")
            
            print()
            total_api = total_fbo + total_fbs
            print(f"   üìä –ò—Ç–æ–≥–æ –≤ API:")
            print(f"      FBO (WB —Å–∫–ª–∞–¥—ã):     {total_fbo:,} —à—Ç".replace(',', ' '))
            print(f"      FBS (Seller —Å–∫–ª–∞–¥—ã): {total_fbs:,} —à—Ç".replace(',', ' '))
            print(f"      –í–°–ï–ì–û:               {total_api:,} —à—Ç".replace(',', ' '))
            print()
            
            print(f"   üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤:")
            print(f"      WB –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (30 –æ–∫—Ç): {article_info['wb_stock']:,} —à—Ç".replace(',', ' ') if article_info['wb_stock'] else "      WB –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: N/A")
            print(f"      Tracker (Google Sheets): {article_info['tracker_stock']:,} —à—Ç".replace(',', ' '))
            print(f"      API (—Å–µ–π—á–∞—Å):            {total_api:,} —à—Ç".replace(',', ' '))
            print()
            
            # –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
            if abs(total_api - article_info['tracker_stock']) <= 50:
                print(f"   ‚úÖ TRACKER –ü–û–ß–¢–ò –°–û–í–ü–ê–î–ê–ï–¢ –° API! (—Ä–∞–∑–Ω–∏—Ü–∞: {total_api - article_info['tracker_stock']:+d})")
            elif article_info['wb_stock'] and abs(total_api - article_info['wb_stock']) <= 50:
                print(f"   ‚úÖ WB –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–ß–¢–ò –°–û–í–ü–ê–î–ê–ï–¢ –° API! (—Ä–∞–∑–Ω–∏—Ü–∞: {total_api - article_info['wb_stock']:+d})")
            else:
                diff_tracker = total_api - article_info['tracker_stock']
                diff_wb = total_api - article_info['wb_stock'] if article_info['wb_stock'] else None
                print(f"   ‚ö†Ô∏è  –†–ê–°–•–û–ñ–î–ï–ù–ò–ï:")
                print(f"       vs Tracker: {diff_tracker:+d} —à—Ç")
                if diff_wb is not None:
                    print(f"       vs WB Stats: {diff_wb:+d} —à—Ç")
            
        else:
            print(f"   ‚ùå –û—Å—Ç–∞—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API!")
        
        print()
        
    except Exception as e:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤: {e}")
        print()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets
    print("üìä 3. –î–ê–ù–ù–´–ï –í GOOGLE SHEETS")
    print("-" * 100)
    
    try:
        sheets_client = GoogleSheetsClient()  # Uses config internally
        sheets_ops = SheetsOperations(sheets_client)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        all_data = sheets_ops.get_all_products(config.google_sheets.sheet_id)
        
        # –ò—â–µ–º –Ω–∞—à –∞—Ä—Ç–∏–∫—É–ª
        article_data = None
        for row in all_data:
            if row.get('supplier_article') == article_info['supplier_article']:
                article_data = row
                break
        
        if article_data:
            print(f"   ‚úÖ –ê—Ä—Ç–∏–∫—É–ª –Ω–∞–π–¥–µ–Ω –≤ Google Sheets:")
            print(f"      –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞: {article_data.get('supplier_article')}")
            print(f"      NM ID: {article_data.get('nm_id')}")
            print(f"      –ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ): {article_data.get('total_orders', 0)}")
            print(f"      –û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ): {article_data.get('total_stock', 0)}")
            print(f"      –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å: {article_data.get('turnover', 0)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º warehouse_details
            warehouse_details = article_data.get('warehouse_details', {})
            if warehouse_details:
                warehouses = warehouse_details.get('warehouses', [])
                print(f"      –°–∫–ª–∞–¥–æ–≤ –≤ –¥–µ—Ç–∞–ª—è—Ö: {len(warehouses)}")
                
                if warehouses:
                    print(f"      –ü–µ—Ä–≤—ã–µ 5 —Å–∫–ª–∞–¥–æ–≤:")
                    for i, wh in enumerate(warehouses[:5], 1):
                        print(f"         {i}. {wh.get('name', 'N/A'):40} | –ó–∞–∫–∞–∑—ã: {wh.get('orders', 0):3} | –û—Å—Ç–∞—Ç–∫–∏: {wh.get('stock', 0):6}")
            
        else:
            print(f"   ‚ùå –ê—Ä—Ç–∏–∫—É–ª –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Google Sheets!")
        
        print()
        
    except Exception as e:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Google Sheets: {e}")
        print()
    
    print()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 100)
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ê–°–•–û–ñ–î–ï–ù–ò–ô")
    print("=" * 100)
    print()
    print("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º 3 –∞—Ä—Ç–∏–∫—É–ª–∞ —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É WB —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏ Tracker")
    print()
    
    for article in PROBLEM_ARTICLES:
        await debug_article(article)
        print()
        print()
    
    print("=" * 100)
    print("‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 100)


if __name__ == '__main__':
    asyncio.run(main())
