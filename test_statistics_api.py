#!/usr/bin/env python3
"""
Test Statistics API /api/v1/supplier/stocks endpoint
This might return ALL stocks including "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å"
"""

import sys
import os
import requests
import json
from datetime import datetime

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from stock_tracker.utils.config import get_config

def main():
    config = get_config()
    
    print("\n" + "="*100)
    print("üîç –¢–ï–°–¢: Statistics API /api/v1/supplier/stocks")
    print("="*100)
    
    # Statistics API endpoint
    url = "https://statistics-api.wildberries.ru/api/v1/supplier/stocks"
    
    # Query parameter: dateFrom (required)
    params = {
        'dateFrom': '2025-10-27'  # Yesterday
    }
    
    headers = {
        'Authorization': config.wildberries_api_key,
        'Content-Type': 'application/json'
    }
    
    print(f"\nüì° URL: {url}")
    print(f"üìÖ dateFrom: {params['dateFrom']}")
    print(f"üîë API Key: {config.wildberries_api_key[:20]}...")
    
    try:
        print("\n‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
        response = requests.get(url, headers=headers, params=params, timeout=30)
        
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            
            print(f"\nüìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(data)}")
            
            # Find Its1_2_3/50g
            target_product = None
            for record in data:
                if record.get('supplierArticle') == 'Its1_2_3/50g':
                    target_product = record
                    break
            
            if target_product:
                print("\n‚úÖ –¢–æ–≤–∞—Ä Its1_2_3/50g –ù–ê–ô–î–ï–ù!")
                print("\n" + "-"*100)
                print("üì¶ –ü–û–õ–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:")
                print("-"*100)
                print(json.dumps(target_product, indent=2, ensure_ascii=False))
                print("-"*100)
                
                # Analyze fields
                print("\nüîç –ê–ù–ê–õ–ò–ó –ü–û–õ–ï–ô:")
                print("-"*100)
                
                quantity_fields = {k: v for k, v in target_product.items() 
                                 if 'quantity' in k.lower() or 'stock' in k.lower() or 'qty' in k.lower()}
                
                if quantity_fields:
                    print("–ü–æ–ª—è —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º:")
                    for key, value in quantity_fields.items():
                        print(f"  - {key}: {value}")
                else:
                    print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª–µ–π —Å quantity/stock")
                
                # Check warehouse field
                warehouse_fields = {k: v for k, v in target_product.items() 
                                   if 'warehouse' in k.lower() or '—Å–∫–ª–∞–¥' in k.lower()}
                
                if warehouse_fields:
                    print("\n–ü–æ–ª—è —Å–æ —Å–∫–ª–∞–¥–æ–º:")
                    for key, value in warehouse_fields.items():
                        print(f"  - {key}: {value}")
                
                # Total stock
                total_stock = target_product.get('quantity', 0)
                print(f"\nüìà –û–±—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏: {total_stock:,} —à—Ç")
                
                if total_stock >= 3000:
                    print("‚úÖ –£–°–ü–ï–•! –≠—Ç–æ –±–ª–∏–∑–∫–æ –∫ –æ–∂–∏–¥–∞–µ–º—ã–º 3,478 —à—Ç!")
                elif total_stock == 475:
                    print("‚ö†Ô∏è –≠—Ç–æ —Ç–æ—Ç –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —á—Ç–æ –∏ warehouse_remains API")
                else:
                    print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {total_stock}")
                
            else:
                print("\n‚ùå –¢–æ–≤–∞—Ä Its1_2_3/50g –ù–ï –Ω–∞–π–¥–µ–Ω")
                print("\nüìã –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞ –≤ –æ—Ç–≤–µ—Ç–µ:")
                for i, record in enumerate(data[:3], 1):
                    article = record.get('supplierArticle', 'Unknown')
                    qty = record.get('quantity', 0)
                    print(f"  {i}. {article} - {qty} —à—Ç")
            
            # Check if there are multiple records per product (one per warehouse)
            articles = {}
            for record in data:
                article = record.get('supplierArticle')
                if article:
                    articles[article] = articles.get(article, 0) + 1
            
            multi_records = {k: v for k, v in articles.items() if v > 1}
            if multi_records:
                print(f"\nüí° –¢–æ–≤–∞—Ä—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏ (–ø–æ —Å–∫–ª–∞–¥–∞–º):")
                for article, count in list(multi_records.items())[:5]:
                    print(f"  - {article}: {count} –∑–∞–ø–∏—Å–µ–π")
            
        elif response.status_code == 401:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (401)")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–µ–Ω –¥—Ä—É–≥–æ–π API –∫–ª—é—á –¥–ª—è Statistics API")
        
        elif response.status_code == 403:
            print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (403)")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è Statistics API")
        
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:500]}")
    
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (30 —Å–µ–∫)")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*100)
    print("üí° –í–´–í–û–î–´:")
    print("="*100)
    print("\nStatistics API - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π API –æ—Ç Wildberries:")
    print("  - –ú–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print("  - –û–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("  - –í–æ–∑–º–æ–∂–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª–µ–µ –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –æ—Å—Ç–∞—Ç–∫–∞—Ö")
    print("\n–ï—Å–ª–∏ —ç—Ç–æ—Ç API —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ~3,478 —à—Ç:")
    print("  ‚úÖ –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' —Å–∫–ª–∞–¥–æ–º")
    print("  ‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —ç—Ç–æ—Ç endpoint")

if __name__ == "__main__":
    main()
