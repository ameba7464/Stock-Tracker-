#!/usr/bin/env python3
"""
Test new Dual API synchronization
"""

import asyncio
from stock_tracker.services.product_service import ProductService
from stock_tracker.utils.logger import get_logger

logger = get_logger(__name__)


async def main():
    print("\n" + "="*100)
    print("üß™ –¢–ï–°–¢: Dual API Synchronization")
    print("="*100)
    
    # Initialize service
    service = ProductService()
    
    # Run sync with new Dual API method
    print("\nüöÄ –ó–∞–ø—É—Å–∫ sync_from_dual_api_to_sheets...")
    
    try:
        session = await service.sync_from_dual_api_to_sheets(skip_existence_check=False)
        
        print("\n" + "="*100)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
        print("="*100)
        print(f"Session ID:         {session.session_id}")
        print(f"Status:             {session.status}")
        print(f"Start Time:         {session.start_time}")
        print(f"End Time:           {session.end_time}")
        print(f"Duration:           {(session.end_time - session.start_time).total_seconds():.1f}s")
        print(f"Products Total:     {session.products_total}")
        print(f"Products Processed: {session.products_processed}")
        print(f"Products Failed:    {session.products_failed}")
        
        if session.errors:
            print(f"\n‚ùå Errors ({len(session.errors)}):")
            for error in session.errors[:10]:
                print(f"  - {error}")
            if len(session.errors) > 10:
                print(f"  ... and {len(session.errors) - 10} more")
        else:
            print("\n‚úÖ No errors!")
        
        # Verify Its1_2_3/50g
        print("\n" + "="*100)
        print("üîç –ü–†–û–í–ï–†–ö–ê: Its1_2_3/50g")
        print("="*100)
        
        from stock_tracker.database.operations import SheetsOperations
        from stock_tracker.database.sheets import GoogleSheetsClient
        from stock_tracker.utils.config import get_config
        
        config = get_config()
        sheets_client = GoogleSheetsClient()
        operations = SheetsOperations(sheets_client)
        
        product = operations.read_product(config.google_sheets.sheet_id, 'Its1_2_3/50g')
        
        if product:
            print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω:")
            print(f"   –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞:    {product.seller_article}")
            print(f"   nmID:                {product.wildberries_article}")
            print(f"   FBO –æ—Å—Ç–∞—Ç–æ–∫:         {product.fbo_stock} —à—Ç")
            print(f"   FBS –æ—Å—Ç–∞—Ç–æ–∫:         {product.fbs_stock} —à—Ç")
            print(f"   –û–ë–©–ò–ô –æ—Å—Ç–∞—Ç–æ–∫:       {product.total_stock} —à—Ç")
            print(f"   –ó–∞–∫–∞–∑—ã:              {product.total_orders}")
            print(f"   –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å:     {product.turnover}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {product.last_updated}")
            
            # Verify numbers
            print(f"\nüéØ –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:")
            print(f"   FBO: ~475 —à—Ç")
            print(f"   FBS: ~2984 —à—Ç")
            print(f"   –ò—Ç–æ–≥–æ: ~3459 —à—Ç")
            
            if 3400 <= product.total_stock <= 3500:
                print(f"\n‚úÖ –£–°–ü–ï–•! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–æ—Ä–º–µ: {product.total_stock} —à—Ç")
            else:
                print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º: {product.total_stock} —à—Ç")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
    
    print("\n" + "="*100)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("="*100)


if __name__ == "__main__":
    asyncio.run(main())
