#!/usr/bin/env python3
"""Simple verification script for FBO/FBS columns in Google Sheets"""

import gspread
from google.oauth2.service_account import Credentials
import os
from pathlib import Path

def main():
    # Get credentials path from environment
    creds_path = os.getenv('GOOGLE_SERVICE_ACCOUNT_KEY_PATH')
    sheet_id = os.getenv('GOOGLE_SHEET_ID')
    sheet_name = os.getenv('GOOGLE_SHEET_NAME', 'Sheet1')
    
    if not creds_path or not sheet_id:
        print("‚ùå Environment variables not set. Please check .env file.")
        return
    
    # Authenticate with Google Sheets
    scope = [
        'https://spreadsheets.google.com/feeds',
        'https://www.googleapis.com/auth/drive'
    ]
    
    creds = Credentials.from_service_account_file(creds_path, scopes=scope)
    client = gspread.authorize(creds)
    
    # Open the spreadsheet
    sheet = client.open_by_key(sheet_id)
    worksheet = sheet.worksheet(sheet_name)
    
    # Get all data
    all_data = worksheet.get_all_values()
    
    if not all_data:
        print("‚ùå No data found in worksheet")
        return
    
    headers = all_data[0]
    rows = all_data[1:13]  # First 12 products
    
    print("\n" + "="*120)
    print("üìä –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• GOOGLE SHEETS - –ö–û–õ–û–ù–ö–ò FBO/FBS")
    print("="*120)
    
    # Find column indices
    try:
        vendor_code_idx = headers.index('–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞')
        total_stock_idx = headers.index('–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)')
        fbo_stock_idx = headers.index('–û—Å—Ç–∞—Ç–∫–∏ FBO')
        fbs_stock_idx = headers.index('–û—Å—Ç–∞—Ç–∫–∏ FBS')
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω—ã –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏:")
        print(f"   - –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞: –∫–æ–ª–æ–Ω–∫–∞ {chr(65 + vendor_code_idx)}")
        print(f"   - –û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ): –∫–æ–ª–æ–Ω–∫–∞ {chr(65 + total_stock_idx)}")
        print(f"   - –û—Å—Ç–∞—Ç–∫–∏ FBO: –∫–æ–ª–æ–Ω–∫–∞ {chr(65 + fbo_stock_idx)}")
        print(f"   - –û—Å—Ç–∞—Ç–∫–∏ FBS: –∫–æ–ª–æ–Ω–∫–∞ {chr(65 + fbs_stock_idx)}")
        
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ - {e}")
        print(f"\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {headers}")
        return
    
    print("\n" + "-"*120)
    print(f"{'–ê—Ä—Ç–∏–∫—É–ª':<25} | {'–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)':>15} | {'FBO':>10} | {'FBS':>10} | {'–ü—Ä–æ–≤–µ—Ä–∫–∞':>15}")
    print("-"*120)
    
    total_products = 0
    correct_splits = 0
    its1_2_3_found = False
    its1_2_3_total = 0
    
    for row in rows:
        if not row or len(row) <= max(vendor_code_idx, total_stock_idx, fbo_stock_idx, fbs_stock_idx):
            continue
        
        vendor_code = row[vendor_code_idx]
        if not vendor_code:
            continue
            
        total = int(row[total_stock_idx]) if row[total_stock_idx].isdigit() else 0
        fbo = int(row[fbo_stock_idx]) if row[fbo_stock_idx].isdigit() else 0
        fbs = int(row[fbs_stock_idx]) if row[fbs_stock_idx].isdigit() else 0
        
        total_products += 1
        
        # Check if FBO + FBS = Total
        is_correct = (fbo + fbs == total)
        if is_correct:
            correct_splits += 1
        
        status = "‚úÖ" if is_correct else "‚ùå"
        
        print(f"{vendor_code:<25} | {total:>15,} | {fbo:>10,} | {fbs:>10,} | {status} {fbo+fbs:>10,}")
        
        # Special check for Its1_2_3/50g
        if vendor_code == "Its1_2_3/50g":
            its1_2_3_found = True
            its1_2_3_total = total
            print(f"\n{'':>25} üîç –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: Its1_2_3/50g")
            if total >= 3000:
                print(f"{'':>25} ‚úÖ –û–±—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ —Ç–µ–ø–µ—Ä—å ~{total:,} (–±—ã–ª–æ 475)")
                print(f"{'':>25} ‚úÖ FBO: {fbo:,}, FBS: {fbs:,}")
                print(f"{'':>25} ‚úÖ –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ!")
            else:
                print(f"{'':>25} ‚ö†Ô∏è –û—Å—Ç–∞—Ç–∫–∏ –≤—Å—ë –µ—â—ë –∑–∞–Ω–∏–∂–µ–Ω—ã: {total:,} (–æ–∂–∏–¥–∞–ª–æ—Å—å ~3,459)")
    
    print("-"*120)
    print(f"\nüìà –ò–¢–û–ì–û:")
    print(f"   - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}")
    print(f"   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ FBO+FBS=Total: {correct_splits}/{total_products}")
    print(f"   - –¢–æ—á–Ω–æ—Å—Ç—å: {(correct_splits/total_products*100):.1f}%")
    
    if not its1_2_3_found:
        print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–≤–∞—Ä Its1_2_3/50g –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤—ã—Ö 12 —Å—Ç—Ä–æ–∫–∞—Ö!")
    elif its1_2_3_total >= 3000:
        print("\n‚úÖ –£–°–ü–ï–•: –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ Its1_2_3/50g —Ä–µ—à–µ–Ω–∞!")
        print(f"   –ë—ã–ª–æ: 475 ‚Üí –°—Ç–∞–ª–æ: {its1_2_3_total:,}")
        print(f"   Improvement: {((its1_2_3_total - 475) / 475 * 100):.0f}% increase")
    
    print("\n" + "="*120)
    print("\nüí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:")
    print("   - –ö–æ–ª–æ–Ω–∫–∞ I (FBO): –°–∫–ª–∞–¥ WB - –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö Wildberries")
    print("   - –ö–æ–ª–æ–Ω–∫–∞ J (FBS): –°–∫–ª–∞–¥ –ø—Ä–æ–¥–∞–≤—Ü–∞ - –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å —Å–∫–ª–∞–¥–∞—Ö")

if __name__ == "__main__":
    main()
