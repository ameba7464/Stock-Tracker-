#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–æ–≤ Stock Tracker

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –Ω–æ–≤–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–æ–≤
—Å–æ–≥–ª–∞—Å–Ω–æ WAREHOUSE_IMPROVEMENT_PROMPT.md:

‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 1: Warehouse API v1 (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ + Analytics v2  
‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 3: Fallback (–∑–∞–≥–ª—É—à–∫–∞)

–ê–≤—Ç–æ—Ä: GitHub Copilot
–î–∞—Ç–∞: 22 –æ–∫—Ç—è–±—Ä—è 2025
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / 'src'))

from stock_tracker.utils.warehouse_cache import get_warehouse_cache, cache_real_warehouses
from stock_tracker.core.calculator import WildberriesCalculator
from stock_tracker.api.client import create_wildberries_client
from stock_tracker.utils.logger import get_logger
from stock_tracker.utils.config import get_config

logger = get_logger(__name__)


async def test_warehouse_improvements():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–æ–≤."""
    
    print("üè≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–ª–∞–¥–æ–≤ Stock Tracker")
    print("=" * 70)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = get_config()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –∫–ª–∏–µ–Ω—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
        print("\nüîß 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª–∏–µ–Ω—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏...")
        wb_client = create_wildberries_client()
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å event loop –≤ —Ç–µ—Å—Ç–µ)
        print(f"   ‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å event loop)")
        print(f"   ‚úÖ API –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤
        print("\nüì¶ 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤...")
        cache = get_warehouse_cache()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞
        cache_stats = cache.get_cache_stats()
        print(f"   üìä –ö—ç—à —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"      –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {cache_stats['total_entries']}")
        print(f"      –í–∞–ª–∏–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {cache_stats['valid_entries']}")
        print(f"      –ò—Å—Ç–µ–∫—à–∏—Ö –∑–∞–ø–∏—Å–µ–π: {cache_stats['expired_entries']}")
        print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {cache_stats['sources']}")
        print(f"      TTL: {cache_stats['ttl_hours']} —á–∞—Å–æ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback —Å–∫–ª–∞–¥—ã
        fallback_warehouses = cache.get_fallback_warehouses()
        fallback_weights = cache.get_fallback_weights()
        print(f"   üîÑ Fallback —Å–∫–ª–∞–¥—ã ({len(fallback_warehouses)}): {fallback_warehouses}")
        print(f"   ‚öñÔ∏è Fallback –≤–µ—Å–∞: {fallback_weights}")
        
        # –ü–†–ò–û–†–ò–¢–ï–¢ 1: –¢–µ—Å—Ç–∏—Ä—É–µ–º Warehouse API v1 —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
        print("\nüì¶ 3. –ü–†–ò–û–†–ò–¢–ï–¢ 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Warehouse API v1...")
        try:
            print("   üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ warehouse_remains...")
            task_id = await wb_client.create_warehouse_remains_task()
            print(f"   ‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
            
            print("   ‚è≥ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï: –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç)...")
            await asyncio.sleep(5)  # –°–æ–∫—Ä–∞—â–µ–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 60
            
            print("   üì• –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
            try:
                warehouse_data = await wb_client.download_warehouse_remains(task_id)
                print(f"   ‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 1 –£–°–ü–ï–•: –ü–æ–ª—É—á–µ–Ω–æ {len(warehouse_data)} –∑–∞–ø–∏—Å–µ–π!")
                
                # –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã
                real_warehouses = cache_real_warehouses(warehouse_data, source="warehouse_api")
                if real_warehouses:
                    print(f"   ‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–æ {len(real_warehouses)} —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤: {real_warehouses}")
                    warehouse_priority_1 = True
                else:
                    print("   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ –∏–∑ –¥–∞–Ω–Ω—ã—Ö")
                    warehouse_priority_1 = False
                    
            except Exception as download_error:
                print(f"   ‚ö†Ô∏è –ü–†–ò–û–†–ò–¢–ï–¢ 1 –ù–ï–£–î–ê–ß–ê: –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_error}")
                warehouse_priority_1 = False
                
        except Exception as api_error:
            print(f"   ‚ö†Ô∏è –ü–†–ò–û–†–ò–¢–ï–¢ 1 –ù–ï–£–î–ê–ß–ê: –û—à–∏–±–∫–∞ API: {api_error}")
            warehouse_priority_1 = False
        
        # –ü–†–ò–û–†–ò–¢–ï–¢ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüìä 4. –ü–†–ò–û–†–ò–¢–ï–¢ 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        warehouse_entry = cache.get_warehouses()
        
        if warehouse_entry:
            print(f"   ‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 2 –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {warehouse_entry.source}")
            print(f"      –í–æ–∑—Ä–∞—Å—Ç: {warehouse_entry.age_hours():.1f} —á–∞—Å–æ–≤")
            print(f"      –°–∫–ª–∞–¥—ã ({len(warehouse_entry.warehouse_names)}): {warehouse_entry.warehouse_names}")
            print(f"      –í–µ—Å–∞: {warehouse_entry.weights}")
            warehouse_priority_2 = True
        else:
            print("   ‚ö†Ô∏è –ü–†–ò–û–†–ò–¢–ï–¢ 2 –ù–ï–£–î–ê–ß–ê: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            warehouse_priority_2 = False
        
        # –ü–†–ò–û–†–ò–¢–ï–¢ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback
        print("\nüîÑ 5. –ü–†–ò–û–†–ò–¢–ï–¢ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Å–∏—Å—Ç–µ–º—ã...")
        print(f"   ‚úÖ –ü–†–ò–û–†–ò–¢–ï–¢ 3 –í–°–ï–ì–î–ê –î–û–°–¢–£–ü–ï–ù: {len(fallback_warehouses)} —Å–∫–ª–∞–¥–æ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É calculator
        print("\nüßÆ 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ calculator...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Analytics API v2
        test_analytics_data = [
            {
                "nmID": 123456789,
                "vendorCode": "TEST001",
                "brandName": "Test Brand",
                "subjectName": "Test Subject",
                "metrics": {
                    "stockCount": 100,
                    "ordersCount": 50
                }
            },
            {
                "nmID": 987654321,
                "vendorCode": "TEST002", 
                "brandName": "Test Brand 2",
                "subjectName": "Test Subject 2",
                "metrics": {
                    "stockCount": 200,
                    "ordersCount": 75
                }
            }
        ]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if warehouse_entry:
            print("   üßÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–∫–ª–∞–¥–∞–º–∏...")
            products = WildberriesCalculator.process_analytics_v2_data(test_analytics_data, warehouse_entry)
        else:
            print("   üßÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å fallback —Å–∫–ª–∞–¥–∞–º–∏...")
            products = WildberriesCalculator.process_analytics_v2_data(test_analytics_data)
        
        print(f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–∫–ª–∞–¥–∞–º
        if products:
            sample_product = products[0]
            print(f"   üì¶ –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞: {sample_product.seller_article}")
            print(f"      –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {sample_product.total_stock}")
            print(f"      –û–±—â–∏–µ –∑–∞–∫–∞–∑—ã: {sample_product.total_orders}")
            print(f"      –°–∫–ª–∞–¥–æ–≤: {len(sample_product.warehouses)}")
            
            for i, warehouse in enumerate(sample_product.warehouses):
                print(f"         {i+1}. {warehouse.name}: —Å—Ç–æ–∫={warehouse.stock}, –∑–∞–∫–∞–∑—ã={warehouse.orders}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤
        print("\nüìã 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤...")
        real_warehouse_list = WildberriesCalculator.get_real_warehouse_list()
        print(f"   üì¶ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ ({len(real_warehouse_list)}): {real_warehouse_list}")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print("=" * 50)
        
        priority_1_status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if warehouse_priority_1 else "‚ö†Ô∏è –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        priority_2_status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if warehouse_priority_2 else "‚ö†Ô∏è –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        priority_3_status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢ (–í–°–ï–ì–î–ê)"
        
        print(f"   ü•á –ü–†–ò–û–†–ò–¢–ï–¢ 1 (Warehouse API v1): {priority_1_status}")
        print(f"   ü•à –ü–†–ò–û–†–ò–¢–ï–¢ 2 (–ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ): {priority_2_status}")
        print(f"   ü•â –ü–†–ò–û–†–ò–¢–ï–¢ 3 (Fallback —Å–∏—Å—Ç–µ–º–∞): {priority_3_status}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
        if warehouse_priority_1:
            active_priority = "–ü–†–ò–û–†–ò–¢–ï–¢ 1 (–†–µ–∞–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã)"
            data_quality = "–û–¢–õ–ò–ß–ù–û–ï"
        elif warehouse_priority_2:
            active_priority = "–ü–†–ò–û–†–ò–¢–ï–¢ 2 (–ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥—ã)"
            data_quality = "–•–û–†–û–®–ï–ï"
        else:
            active_priority = "–ü–†–ò–û–†–ò–¢–ï–¢ 3 (Fallback —Å–∫–ª–∞–¥—ã)"
            data_quality = "–£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û–ï"
        
        print(f"\nüéØ –ê–ö–¢–ò–í–ù–´–ô –ü–†–ò–û–†–ò–¢–ï–¢: {active_priority}")
        print(f"üìä –ö–ê–ß–ï–°–¢–í–û –î–ê–ù–ù–´–•: {data_quality}")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        if not warehouse_priority_1:
            print("   üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Warehouse API v1")
            print("   ‚è∞ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ–±–ª—é–¥–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã (60+ —Å–µ–∫—É–Ω–¥)")
        if not warehouse_priority_2:
            print("   üíæ –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –∏–º–µ–µ—Ç –¥–∞–Ω–Ω—ã—Ö - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ Warehouse API")
        
        print("\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("\nüè≠ –°–∏—Å—Ç–µ–º–∞ —Å–∫–ª–∞–¥–æ–≤ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é —Å—Ö–µ–º—É:")
        print("   1Ô∏è‚É£ –†–µ–∞–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã –∏–∑ Warehouse API v1 (15 –º–∏–Ω —Ç–∞–π–º–∞—É—Ç)")
        print("   2Ô∏è‚É£ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥—ã (TTL 24 —á–∞—Å–∞)")
        print("   3Ô∏è‚É£ Fallback —Å–∫–ª–∞–¥—ã (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ)")
        
        return True
        
    except Exception as e:
        logger.error(f"–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {e}")
        return False
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if 'wb_client' in locals():
            wb_client.close()


if __name__ == "__main__":
    print("üè≠ Stock Tracker Warehouse Improvements Test")
    print(f"üìÖ –î–∞—Ç–∞: 22 –æ–∫—Ç—è–±—Ä—è 2025")
    print(f"üéØ –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ WAREHOUSE_IMPROVEMENT_PROMPT.md\n")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    success = asyncio.run(test_warehouse_improvements())
    
    if success:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        sys.exit(0)
    else:
        print("\nüí• –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        sys.exit(1)