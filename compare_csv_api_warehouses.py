#!/usr/bin/env python3
"""
Compare CSV warehouses vs API warehouses to find the missing "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å"
"""

import csv

def main():
    print("\n" + "="*100)
    print("üîç –°–†–ê–í–ù–ï–ù–ò–ï: CSV —Å–∫–ª–∞–¥—ã vs API —Å–∫–ª–∞–¥—ã –¥–ª—è Its1_2_3/50g")
    print("="*100)
    
    # Parse CSV to get all warehouses
    csv_warehouses = {}
    
    with open('27-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 21-10-2025 –ø–æ 27-10-2025_export.csv', 'r', encoding='utf-8-sig') as f:
        reader = csv.DictReader(f)
        
        for row in reader:
            if row.get('–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '') == 'Its1_2_3/50g':
                warehouse = row.get('–°–∫–ª–∞–¥', 'Unknown')
                stock_str = row.get('–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç', '0').strip()
                stock_int = int(stock_str) if stock_str.isdigit() else 0
                
                if warehouse not in csv_warehouses:
                    csv_warehouses[warehouse] = 0
                csv_warehouses[warehouse] += stock_int
    
    # API warehouses from sync logs
    api_warehouses = {
        '–ü–æ–¥–æ–ª—å—Å–∫ 3': 0,  # orders=17, stock=0
        '–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å': 0,  # orders=20, stock=0
        '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ - –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π 12': 0,  # orders=2, stock=0
        '–ö–∞–∑–∞–Ω—å': 0,  # orders=8, stock=0
        '–û–±—É—Ö–æ–≤–æ –ú–ü': 0,  # orders=67, stock=0 (FBS)
        '–°–∞–º–∞—Ä–∞ (–ù–æ–≤–æ—Å–µ–º–µ–π–∫–∏–Ω–æ)': 0,  # orders=1, stock=0
        '–í–æ—Ä–æ–Ω–µ–∂': 0,  # orders=1, stock=0
        '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä': 0,  # orders=1, stock=0
        '–†—è–∑–∞–Ω—å (–¢—é—à–µ–≤—Å–∫–æ–µ)': 0,  # orders=1, stock=0
        # NOTE: According to sync logs, stock=475 was calculated
        # But we don't know which warehouses had the 475
    }
    
    print("\nüìã CSV –°–ö–õ–ê–î–´ (–∏–∑ —ç–∫—Å–ø–æ—Ä—Ç–∞ Wildberries):")
    print("-"*100)
    csv_total = 0
    for wh, stock in sorted(csv_warehouses.items(), key=lambda x: x[1], reverse=True):
        print(f"  {wh:40} {stock:>6,} —à—Ç")
        csv_total += stock
    print("-"*100)
    print(f"  {'–ò–¢–û–ì–û (CSV)':40} {csv_total:>6,} —à—Ç")
    print("="*100)
    
    print("\nüñ•Ô∏è  API –°–ö–õ–ê–î–´ (–∏–∑ –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏):")
    print("-"*100)
    for wh in sorted(api_warehouses.keys()):
        print(f"  {wh:40} {'???':>6} —à—Ç (stock unknown from logs)")
    print("-"*100)
    print(f"  {'–ò–¢–û–ì–û (API)':40} {'475':>6} —à—Ç (from sync result)")
    print("="*100)
    
    # Find missing warehouses
    print("\n‚ùå –°–ö–õ–ê–î–´ –ò–ó CSV, –ö–û–¢–û–†–´–• –ù–ï–¢ –í API:")
    print("-"*100)
    
    missing_stock = 0
    for csv_wh, stock in csv_warehouses.items():
        # Normalize names for comparison
        csv_wh_norm = csv_wh.lower().replace(' ', '').replace('-', '').replace('(', '').replace(')', '')
        
        found = False
        for api_wh in api_warehouses.keys():
            api_wh_norm = api_wh.lower().replace(' ', '').replace('-', '').replace('(', '').replace(')', '')
            if csv_wh_norm == api_wh_norm:
                found = True
                break
        
        if not found:
            print(f"  ‚ö†Ô∏è  {csv_wh:40} {stock:>6,} —à—Ç")
            missing_stock += stock
    
    print("-"*100)
    print(f"  {'–ò–¢–û–ì–û –û–¢–°–£–¢–°–¢–í–£–ï–¢':40} {missing_stock:>6,} —à—Ç")
    print("="*100)
    
    # Analysis
    print("\nüìä –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:")
    print("="*100)
    
    if missing_stock > 0:
        percent = (missing_stock / csv_total * 100)
        print(f"\n‚ùå –°–∫–ª–∞–¥ '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' —Å {missing_stock:,} —à—Ç ({percent:.1f}%) –ù–ï –í–û–ó–í–†–ê–©–ê–ï–¢–°–Ø API")
        print("\nüí° –ü–†–ò–ß–ò–ù–´:")
        print("   1. API warehouse_remains –ù–ï –≤–∫–ª—é—á–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ/—Ç—Ä–∞–Ω–∑–∏—Ç–Ω—ã–µ —Å–∫–ª–∞–¥—ã")
        print("   2. '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' = —Ç–æ–≤–∞—Ä—ã –≤ –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É / –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ")
        print("   3. –≠—Ç–æ FBS —Å–∫–ª–∞–¥ (Fulfillment by Seller)")
        
        print("\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
        print("\n   –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π API endpoint")
        print("   ‚úÖ –ò—Å–∫–∞—Ç—å /api/v2/stocks –∏–ª–∏ /supplier/stocks")
        print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ includeTransit=true")
        
        print("\n   –í–∞—Ä–∏–∞–Ω—Ç 2: –î–æ–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ orders API")
        print("   ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞: orders –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —É–∂–µ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä, –Ω–µ –æ—Å—Ç–∞—Ç–∫–∏")
        
        print("\n   –í–∞—Ä–∏–∞–Ω—Ç 3: –ü—Ä–∏–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ API")
        print("   ‚ùå –û—Å—Ç–∞—Ç–∫–∏ –±—É–¥—É—Ç –Ω–µ—Ç–æ—á–Ω—ã–µ (–º–∏–Ω—É—Å 86%)")
        
        print("\n   –í–∞—Ä–∏–∞–Ω—Ç 4: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å CSV –∏–º–ø–æ—Ä—Ç")
        print("   ‚úÖ –¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ WB")
        print("   ‚ùå –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞")
    else:
        print("\n‚úÖ –í—Å–µ —Å–∫–ª–∞–¥—ã –∏–∑ CSV –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ API")
        print("   ‚Üí –ü—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º (–≤–æ–∑–º–æ–∂–Ω–æ –≤ –ø–æ–¥—Å—á–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞)")
    
    print("\n" + "="*100)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    print("="*100)
    print("\n–°–∫–ª–∞–¥ '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å' - —ç—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å–∫–ª–∞–¥ WB –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤:")
    print("  - –í –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É")
    print("  - –í –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏")
    print("  - –ù–∞ FBS —Å–∫–ª–∞–¥–∞—Ö –ø—Ä–æ–¥–∞–≤—Ü–∞")
    print("\nAPI warehouse_remains –ù–ï –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ.")
    print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –∏–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ.")

if __name__ == "__main__":
    main()
