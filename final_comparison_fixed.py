#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ Stock Tracker vs –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ WB
–î–∞—Ç–∞: 30 –æ–∫—Ç—è–±—Ä—è 2025
"""

import pandas as pd
from collections import defaultdict
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–ª—è Windows
try:
    sys.stdout.reconfigure(encoding='utf-8')
except:
    pass

def parse_number(value):
    """–ü–∞—Ä—Å–∏—Ç —á–∏—Å–ª–æ, —É–¥–∞–ª—è—è –ø—Ä–æ–±–µ–ª—ã (–≤–∫–ª—é—á–∞—è –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ)"""
    if pd.isna(value) or value == '':
        return 0
    try:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã (–æ–±—ã—á–Ω—ã–µ –∏ –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ)
        cleaned = str(value).replace(' ', '').replace('\xa0', '').replace(',', '.')
        return float(cleaned)
    except:
        return 0

# –§–∞–π–ª—ã
wb_file = "30-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 24-10-2025 –ø–æ 30-10-2025_export.csv"
tracker_file = "Stock Tracker - Stock Tracker (1).csv"

print("=" * 80)
print("–§–ò–ù–ê–õ–¨–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï: Stock Tracker vs –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ WB")
print("=" * 80)
print()

# –ß–∏—Ç–∞–µ–º WB —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º WB —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
wb_df = pd.read_csv(wb_file, sep=',', encoding='utf-8', skiprows=1)  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É "–û—Å—Ç–∞—Ç–∫–∏ –ø–æ –ö–¢"
print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(wb_df)}")
print(f"   –ö–æ–ª–æ–Ω–∫–∏: {list(wb_df.columns[:5])}...")
print()

# –ß–∏—Ç–∞–µ–º Stock Tracker
print("üìã –ó–∞–≥—Ä—É–∂–∞–µ–º Stock Tracker...")
tracker_df = pd.read_csv(tracker_file, sep=',', encoding='utf-8')
print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(tracker_df)}")
print(f"   –ö–æ–ª–æ–Ω–∫–∏: {list(tracker_df.columns[:5])}...")
print()

# –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º WB –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
print("üîÑ –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ WB –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º...")
wb_aggregated = defaultdict(lambda: {'orders': 0, 'stock': 0, 'warehouses': set()})

for _, row in wb_df.iterrows():
    article = str(row.get('–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '')).strip()
    warehouse = str(row.get('–°–∫–ª–∞–¥', '')).strip()
    
    try:
        orders = parse_number(row.get('–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç', 0))
    except:
        orders = 0
    
    try:
        stock = parse_number(row.get('–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç', 0))
    except:
        stock = 0
    
    if article and article not in ['', 'nan', 'None']:
        wb_aggregated[article]['orders'] += orders
        wb_aggregated[article]['stock'] += stock
        if warehouse:
            wb_aggregated[article]['warehouses'].add(warehouse)

print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ WB: {len(wb_aggregated)}")
print()

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º Stock Tracker –¥–∞–Ω–Ω—ã–µ
print("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Stock Tracker...")
tracker_data = {}

for _, row in tracker_df.iterrows():
    article = str(row.get('–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '')).strip()
    
    try:
        orders = parse_number(row.get('–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)', 0))
    except:
        orders = 0
    
    try:
        stock = parse_number(row.get('–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)', 0))
    except:
        stock = 0
    
    if article and article not in ['', 'nan', 'None']:
        tracker_data[article] = {
            'orders': orders,
            'stock': stock
        }

print(f"   –ê—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ Stock Tracker: {len(tracker_data)}")
print()

# –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º
print("=" * 80)
print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–†–ê–í–ù–ï–ù–ò–Ø")
print("=" * 80)
print()

common_articles = set(wb_aggregated.keys()) & set(tracker_data.keys())
print(f"‚úÖ –û–±—â–∏—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤: {len(common_articles)}")
print()

if len(common_articles) == 0:
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ—Ç –æ–±—â–∏—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤!")
    print()
    print("–ê—Ä—Ç–∏–∫—É–ª—ã –≤ WB (–ø–µ—Ä–≤—ã–µ 10):")
    for art in list(wb_aggregated.keys())[:10]:
        print(f"  - '{art}'")
    print()
    print("–ê—Ä—Ç–∏–∫—É–ª—ã –≤ Stock Tracker (–ø–µ—Ä–≤—ã–µ 10):")
    for art in list(tracker_data.keys())[:10]:
        print(f"  - '{art}'")
    sys.exit(0)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
order_matches = 0
stock_matches = 0
order_discrepancies = []
stock_discrepancies = []

for article in common_articles:
    wb_orders = wb_aggregated[article]['orders']
    wb_stock = wb_aggregated[article]['stock']
    tracker_orders = tracker_data[article]['orders']
    tracker_stock = tracker_data[article]['stock']
    
    # –ó–∞–∫–∞–∑—ã (–¥–æ–ø—É—Å–∫ ¬±1)
    order_diff = abs(wb_orders - tracker_orders)
    if order_diff <= 1:
        order_matches += 1
    else:
        order_discrepancies.append({
            'article': article,
            'wb': wb_orders,
            'tracker': tracker_orders,
            'diff': tracker_orders - wb_orders,
            'diff_pct': ((tracker_orders - wb_orders) / wb_orders * 100) if wb_orders > 0 else 0
        })
    
    # –û—Å—Ç–∞—Ç–∫–∏ (–¥–æ–ø—É—Å–∫ ¬±5)
    stock_diff = abs(wb_stock - tracker_stock)
    if stock_diff <= 5:
        stock_matches += 1
    else:
        stock_discrepancies.append({
            'article': article,
            'wb': wb_stock,
            'tracker': tracker_stock,
            'diff': tracker_stock - wb_stock,
            'diff_pct': ((tracker_stock - wb_stock) / wb_stock * 100) if wb_stock > 0 else 0
        })

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
print("üéØ –°–û–í–ü–ê–î–ï–ù–ò–ï –ó–ê–ö–ê–ó–û–í:")
order_match_rate = (order_matches / len(common_articles)) * 100
print(f"   –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: {order_matches} –∏–∑ {len(common_articles)} ({order_match_rate:.1f}%)")

if order_discrepancies:
    print(f"   –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π: {len(order_discrepancies)}")
    print()
    print("   –¢–û–ü-5 —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ –∑–∞–∫–∞–∑–∞–º:")
    sorted_order_discrep = sorted(order_discrepancies, key=lambda x: abs(x['diff']), reverse=True)[:5]
    for item in sorted_order_discrep:
        print(f"      {item['article']:20} | WB: {item['wb']:6.0f} | Tracker: {item['tracker']:6.0f} | Œî: {item['diff']:+7.0f} ({item['diff_pct']:+6.1f}%)")
print()

print("üì¶ –°–û–í–ü–ê–î–ï–ù–ò–ï –û–°–¢–ê–¢–ö–û–í:")
stock_match_rate = (stock_matches / len(common_articles)) * 100
print(f"   –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: {stock_matches} –∏–∑ {len(common_articles)} ({stock_match_rate:.1f}%)")

if stock_discrepancies:
    print(f"   –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π: {len(stock_discrepancies)}")
    print()
    print("   –¢–û–ü-5 —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º:")
    sorted_stock_discrep = sorted(stock_discrepancies, key=lambda x: abs(x['diff']), reverse=True)[:5]
    for item in sorted_stock_discrep:
        print(f"      {item['article']:20} | WB: {item['wb']:8.0f} | Tracker: {item['tracker']:8.0f} | Œî: {item['diff']:+9.0f} ({item['diff_pct']:+6.1f}%)")
print()

# –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ —Å–∫–ª–∞–¥–∞–º (–ø–µ—Ä–≤—ã–µ 3 –∞—Ä—Ç–∏–∫—É–ª–∞)
print("=" * 80)
print("üè≠ –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ü–û –°–ö–õ–ê–î–ê–ú (–ø–µ—Ä–≤—ã–µ 3 –∞—Ä—Ç–∏–∫—É–ª–∞)")
print("=" * 80)
print()

for article in list(common_articles)[:3]:
    wb_warehouses = wb_aggregated[article]['warehouses']
    print(f"–ê—Ä—Ç–∏–∫—É–ª: {article}")
    print(f"  WB –ó–∞–∫–∞–∑—ã: {wb_aggregated[article]['orders']:.0f}")
    print(f"  WB –û—Å—Ç–∞—Ç–∫–∏: {wb_aggregated[article]['stock']:.0f}")
    print(f"  WB –°–∫–ª–∞–¥—ã ({len(wb_warehouses)}): {', '.join(sorted(wb_warehouses)[:5])}")
    print(f"  Tracker –ó–∞–∫–∞–∑—ã: {tracker_data[article]['orders']:.0f}")
    print(f"  Tracker –û—Å—Ç–∞—Ç–∫–∏: {tracker_data[article]['stock']:.0f}")
    print()

# –ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥
print("=" * 80)
print("üìä –ò–¢–û–ì–û–í–´–ô –í–´–í–û–î")
print("=" * 80)
print()

if order_match_rate >= 80 and stock_match_rate >= 80:
    print("‚úÖ –û–¢–õ–ò–ß–ù–û! –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: {order_match_rate:.1f}%")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤: {stock_match_rate:.1f}%")
    print()
    print("üéâ –¶–µ–ª—å –Ω–∞ $1,000,000 –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!")
elif order_match_rate >= 70 or stock_match_rate >= 70:
    print("‚ö†Ô∏è  –•–û–†–û–®–û, –Ω–æ –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è:")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: {order_match_rate:.1f}%")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤: {stock_match_rate:.1f}%")
    print()
    print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π.")
else:
    print("‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: {order_match_rate:.1f}%")
    print(f"   - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤: {stock_match_rate:.1f}%")
    print()
    print("–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑.")

print()
print("=" * 80)
