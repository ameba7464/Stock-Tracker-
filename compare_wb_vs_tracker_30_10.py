#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ WB —Å —Ç—Ä–µ–∫–µ—Ä–æ–º Stock-Tracker
–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: 30-10-2025
"""

import pandas as pd
from collections import defaultdict

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
wb_file = r"c:\Users\miros\Downloads\30-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 24-10-2025 –ø–æ 30-10-2025_export.csv_export (1).tsv"
tracker_file = r"c:\Users\miros\Downloads\Stock Tracker - Stock Tracker.tsv_export.tsv"

print("=" * 100)
print("–°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó: –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ WB vs Stock-Tracker")
print("=" * 100)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
wb_df = pd.read_csv(wb_file, sep='\t', encoding='utf-8')
tracker_df = pd.read_csv(tracker_file, sep='\t', encoding='utf-8')

print(f"\nüìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö:")
print(f"  - WB —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {len(wb_df)} —Å—Ç—Ä–æ–∫")
print(f"  - Stock-Tracker: {len(tracker_df)} —Å—Ç—Ä–æ–∫")

# –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª—ã
wb_articles = set(wb_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'].unique())
tracker_articles = set(tracker_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'].unique())

print(f"\nüì¶ –ê—Ä—Ç–∏–∫—É–ª—ã:")
print(f"  - –í WB —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ: {len(wb_articles)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö")
print(f"  - –í Stock-Tracker: {len(tracker_articles)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö")

common_articles = wb_articles & tracker_articles
print(f"  - –û–±—â–∏—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤: {len(common_articles)}")

if wb_articles - tracker_articles:
    print(f"  - –¢–æ–ª—å–∫–æ –≤ WB: {wb_articles - tracker_articles}")
if tracker_articles - wb_articles:
    print(f"  - –¢–æ–ª—å–∫–æ –≤ Tracker: {tracker_articles - wb_articles}")

print("\n" + "=" * 100)
print("–î–ï–¢–ê–õ–¨–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –ü–û –ê–†–¢–ò–ö–£–õ–ê–ú")
print("=" * 100)

# –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ WB –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –ø—Ä–æ–¥–∞–≤—Ü–∞ (—Å—É–º–º–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º)
wb_aggregated = {}
for article in common_articles:
    wb_article_data = wb_df[wb_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    
    # –°—É–º–º–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –∏ –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º
    total_orders = wb_article_data['–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç'].sum()
    
    # –î–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–∫–ª–∞–¥—ã (–Ω–µ "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å" –∏ –Ω–µ —Å–ª—É–∂–µ–±–Ω—ã–µ)
    stock_rows = wb_article_data[
        (wb_article_data['–°–∫–ª–∞–¥'] != '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å') & 
        (~wb_article_data['–°–∫–ª–∞–¥'].str.contains('–ö–æ–ª–µ–¥–∏–Ω–æ|–û–±—É—Ö–æ–≤–æ|–ü—É—à–∫–∏–Ω–æ|–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π|–û—Å—Ç–∞–ª—å–Ω—ã–µ', na=False))
    ]
    total_stock = stock_rows['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç'].sum()
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å–∫–ª–∞–¥–∞–º
    warehouses_info = []
    for _, row in wb_article_data.iterrows():
        wh_name = row['–°–∫–ª–∞–¥']
        wh_orders = row['–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç']
        wh_stock = row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç']
        if pd.notna(wh_orders) or pd.notna(wh_stock):
            warehouses_info.append({
                'name': wh_name,
                'orders': wh_orders if pd.notna(wh_orders) else 0,
                'stock': wh_stock if pd.notna(wh_stock) else 0,
                'region': row['–†–µ–≥–∏–æ–Ω']
            })
    
    wb_aggregated[article] = {
        'orders': total_orders,
        'stock': total_stock,
        'warehouses': warehouses_info,
        'wb_article': wb_article_data['–ê—Ä—Ç–∏–∫—É–ª WB'].iloc[0] if len(wb_article_data) > 0 else 'N/A'
    }

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ Tracker
tracker_aggregated = {}
for article in common_articles:
    tracker_article_data = tracker_df[tracker_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    
    if len(tracker_article_data) == 0:
        continue
    
    row = tracker_article_data.iloc[0]
    
    # –ü–∞—Ä—Å–∏–º –∑–∞–∫–∞–∑—ã –∏ –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º
    warehouses_str = str(row['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞'])
    orders_str = str(row['–ó–∞–∫–∞–∑—ã —Å–æ —Å–∫–ª–∞–¥–∞'])
    stock_str = str(row['–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ'])
    
    warehouses = [w.strip() for w in warehouses_str.split() if w.strip()]
    orders_parts = orders_str.replace('/', ' ').split()
    stock_parts = stock_str.split()
    
    # –£–±–∏—Ä–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–∫–ª–∞–¥–æ–≤ (—ç—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Ü–∏—Ñ—Ä—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏)
    warehouses_clean = []
    for w in warehouses:
        if not w.isdigit() and not w.replace(',', '').replace('.', '').isdigit():
            warehouses_clean.append(w)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
    orders_val = row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)']
    if pd.notna(orders_val):
        if isinstance(orders_val, str):
            orders_total = int(orders_val.replace(' ', '').replace(',', ''))
        else:
            orders_total = int(orders_val)
    else:
        orders_total = 0
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤
    stock_val = row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']
    if pd.notna(stock_val):
        stock_str = str(stock_val).replace(' ', '').replace(',', '')
        try:
            stock_total = int(stock_str)
        except:
            stock_total = 0
    else:
        stock_total = 0
    
    tracker_aggregated[article] = {
        'orders_total': orders_total,
        'stock_total': stock_total,
        'turnover': str(row['–û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å']),
        'wb_article': int(row['–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞']) if pd.notna(row['–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞']) else 0,
        'warehouses': warehouses_clean,
        'orders_by_warehouse': orders_parts,
        'stock_by_warehouse': stock_parts
    }

# –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
print("\n")
for article in sorted(common_articles):
    wb_data = wb_aggregated.get(article, {})
    tracker_data = tracker_aggregated.get(article, {})
    
    print(f"\n{'‚îÅ' * 100}")
    print(f"üè∑Ô∏è  –ê–†–¢–ò–ö–£–õ: {article}")
    print(f"{'‚îÅ' * 100}")
    
    # –ê—Ä—Ç–∏–∫—É–ª WB
    wb_art = wb_data.get('wb_article', 'N/A')
    tracker_art = tracker_data.get('wb_article', 0)
    print(f"\nüìã –ê—Ä—Ç–∏–∫—É–ª WB:")
    print(f"  WB:      {wb_art}")
    print(f"  Tracker: {tracker_art}")
    if str(wb_art) != str(tracker_art):
        print(f"  ‚ö†Ô∏è  –†–ê–°–•–û–ñ–î–ï–ù–ò–ï –≤ –∞—Ä—Ç–∏–∫—É–ª–∞—Ö WB!")
    
    # –ó–∞–∫–∞–∑—ã
    wb_orders = wb_data.get('orders', 0)
    tracker_orders = tracker_data.get('orders_total', 0)
    print(f"\nüì¶ –ó–ê–ö–ê–ó–´ (–≤—Å–µ–≥–æ –∑–∞ –ø–µ—Ä–∏–æ–¥ 24-30 –æ–∫—Ç—è–±—Ä—è):")
    print(f"  WB:      {wb_orders:>6} —à—Ç")
    print(f"  Tracker: {tracker_orders:>6} —à—Ç")
    
    diff_orders = wb_orders - tracker_orders
    if diff_orders != 0:
        print(f"  ‚ùå –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: {diff_orders:+} —à—Ç ({diff_orders/max(wb_orders, 1)*100:+.1f}%)")
    else:
        print(f"  ‚úÖ –°–æ–≤–ø–∞–¥–∞–µ—Ç")
    
    # –û—Å—Ç–∞—Ç–∫–∏
    wb_stock = wb_data.get('stock', 0)
    tracker_stock = tracker_data.get('stock_total', 0)
    print(f"\nüìä –û–°–¢–ê–¢–ö–ò (–Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å):")
    print(f"  WB:      {wb_stock:>6} —à—Ç")
    print(f"  Tracker: {tracker_stock:>6} —à—Ç")
    
    diff_stock = wb_stock - tracker_stock
    if diff_stock != 0:
        print(f"  ‚ùå –†–ê–°–•–û–ñ–î–ï–ù–ò–ï: {diff_stock:+} —à—Ç ({diff_stock/max(wb_stock, 1)*100:+.1f}%)")
    else:
        print(f"  ‚úÖ –°–æ–≤–ø–∞–¥–∞–µ—Ç")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–∫–ª–∞–¥–∞–º –∏–∑ WB
    print(f"\nüè≠ –°–ö–õ–ê–î–´ (–¥–∞–Ω–Ω—ã–µ WB):")
    warehouses = wb_data.get('warehouses', [])
    if warehouses:
        active_warehouses = [w for w in warehouses if w['stock'] > 0 or w['orders'] > 0]
        if active_warehouses:
            print(f"  –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤: {len(active_warehouses)}")
            for wh in active_warehouses[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10
                if wh['stock'] > 0 or wh['orders'] > 0:
                    print(f"    ‚Ä¢ {wh['name']:<35} | –ó–∞–∫–∞–∑—ã: {wh['orders']:>3} | –û—Å—Ç–∞—Ç–∫–∏: {wh['stock']:>6}")
        else:
            print(f"  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
    
    # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å –∏–∑ Tracker
    turnover = tracker_data.get('turnover', 'N/A')
    print(f"\n‚è±Ô∏è  –û–ë–û–†–ê–ß–ò–í–ê–ï–ú–û–°–¢–¨ (Tracker): {turnover} –¥–Ω–µ–π")

print("\n" + "=" * 100)
print("–°–í–û–î–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
print("=" * 100)

total_wb_orders = sum(wb_aggregated[a]['orders'] for a in common_articles)
total_tracker_orders = sum(tracker_aggregated[a]['orders_total'] for a in common_articles)
total_wb_stock = sum(wb_aggregated[a]['stock'] for a in common_articles)
total_tracker_stock = sum(tracker_aggregated[a]['stock_total'] for a in common_articles)

print(f"\nüìä –ò–¢–û–ì–û –ø–æ –≤—Å–µ–º –∞—Ä—Ç–∏–∫—É–ª–∞–º:")
print(f"\n  –ó–∞–∫–∞–∑—ã:")
print(f"    WB:      {total_wb_orders:>8} —à—Ç")
print(f"    Tracker: {total_tracker_orders:>8} —à—Ç")
print(f"    –†–∞–∑–Ω–∏—Ü–∞: {total_wb_orders - total_tracker_orders:>+8} —à—Ç")

print(f"\n  –û—Å—Ç–∞—Ç–∫–∏:")
print(f"    WB:      {total_wb_stock:>8} —à—Ç")
print(f"    Tracker: {total_tracker_stock:>8} —à—Ç")
print(f"    –†–∞–∑–Ω–∏—Ü–∞: {total_wb_stock - total_tracker_stock:>+8} —à—Ç")

# –ê–Ω–∞–ª–∏–∑ —Ç–æ—á–Ω–æ—Å—Ç–∏
articles_with_order_diff = sum(1 for a in common_articles if wb_aggregated[a]['orders'] != tracker_aggregated[a]['orders_total'])
articles_with_stock_diff = sum(1 for a in common_articles if wb_aggregated[a]['stock'] != tracker_aggregated[a]['stock_total'])

print(f"\nüìà –¢–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:")
print(f"    –ê—Ä—Ç–∏–∫—É–ª–æ–≤ —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏ –ø–æ –∑–∞–∫–∞–∑–∞–º:  {articles_with_order_diff}/{len(common_articles)} ({articles_with_order_diff/len(common_articles)*100:.1f}%)")
print(f"    –ê—Ä—Ç–∏–∫—É–ª–æ–≤ —Å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º: {articles_with_stock_diff}/{len(common_articles)} ({articles_with_stock_diff/len(common_articles)*100:.1f}%)")

print("\n" + "=" * 100)
print("–í–´–í–û–î–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
print("=" * 100)

print("""
‚úÖ –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–´–ï –ú–û–ú–ï–ù–¢–´:
   - –í—Å–µ –∞—Ä—Ç–∏–∫—É–ª—ã –∏–∑ —Ç—Ä–µ–∫–µ—Ä–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ WB
   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ

‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø:
   - –†–∞–∑–ª–∏—á–∏—è –≤ –ø–æ–¥—Å—á–µ—Ç–µ –∑–∞–∫–∞–∑–æ–≤ (–º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑-–∑–∞ —Ä–∞–∑–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ —É—á–µ—Ç–∞)
   - –†–∞–∑–ª–∏—á–∏—è –≤ –æ—Å—Ç–∞—Ç–∫–∞—Ö (–º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑-–∑–∞ —É—á–µ—Ç–∞ —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤)
   - –¢—Ä–µ–∫–µ—Ä –º–æ–∂–µ—Ç –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —Å–∫–ª–∞–¥—ã "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å", "–ö–æ–ª–µ–¥–∏–Ω–æ", "–û–±—É—Ö–æ–≤–æ"

üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫–∏–µ —Å–∫–ª–∞–¥—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ç—Ä–µ–∫–µ—Ä–µ
   2. –£—Ç–æ—á–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ —É—á–µ—Ç–∞ –∑–∞–∫–∞–∑–æ–≤ (WB –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞ 24-30 –æ–∫—Ç—è–±—Ä—è)
   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–∫–ª–∞–¥–∞–º
   4. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
""")

print("\n" + "=" * 100)
