import pandas as pd
import numpy as np
from collections import defaultdict

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö WB —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ –∫–æ–¥–∏—Ä–æ–≤–∫—É
try:
    wb_df = pd.read_csv('27-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 21-10-2025 –ø–æ 27-10-2025_export.csv', 
                         encoding='utf-8-sig', sep=',')
except:
    wb_df = pd.read_csv('27-10-2025 –ò—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å 21-10-2025 –ø–æ 27-10-2025_export.csv', 
                         encoding='cp1251', sep=',')

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Stock Tracker
st_df = pd.read_csv('Stock Tracker - Stock Tracker (1).csv', encoding='utf-8')

print("="*80)
print("–ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ò–ó WILDBERRIES")
print("="*80)

# –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ WB –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º
wb_grouped = wb_df.groupby('–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞').agg({
    '–ó–∞–∫–∞–∑–∞–ª–∏, —à—Ç': 'sum',
    '–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —à—Ç': 'sum',
    '–°–∫–ª–∞–¥': lambda x: ', '.join(sorted(set(x.dropna())))
}).reset_index()

wb_grouped.columns = ['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ó–∞–∫–∞–∑—ã WB', '–û—Å—Ç–∞—Ç–∫–∏ WB', '–°–∫–ª–∞–¥—ã WB']

print("\n–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ WB:")
print(wb_grouped.to_string(index=False))

print("\n" + "="*80)
print("–ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ò–ó STOCK TRACKER")
print("="*80)
print("\n–î–∞–Ω–Ω—ã–µ Stock Tracker:")
print(st_df[['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞', '–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)', '–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']].to_string(index=False))

print("\n" + "="*80)
print("–°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•")
print("="*80)

# –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
comparison = pd.merge(
    wb_grouped[['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ó–∞–∫–∞–∑—ã WB', '–û—Å—Ç–∞—Ç–∫–∏ WB']], 
    st_df[['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞', '–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)', '–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']], 
    on='–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', 
    how='outer'
)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–∞
comparison['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'] = pd.to_numeric(comparison['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'], errors='coerce').fillna(0)
comparison['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'] = pd.to_numeric(comparison['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'], errors='coerce').fillna(0)

# –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
comparison['–†–∞–∑–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤'] = comparison['–ó–∞–∫–∞–∑—ã WB'] - comparison['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)']
comparison['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤'] = np.where(
    comparison['–ó–∞–∫–∞–∑—ã WB'] != 0,
    (comparison['–†–∞–∑–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤'] / comparison['–ó–∞–∫–∞–∑—ã WB'] * 100).round(2),
    0
)

comparison['–†–∞–∑–Ω–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤'] = comparison['–û—Å—Ç–∞—Ç–∫–∏ WB'] - comparison['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']
comparison['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤'] = np.where(
    comparison['–û—Å—Ç–∞—Ç–∫–∏ WB'] != 0,
    (comparison['–†–∞–∑–Ω–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤'] / comparison['–û—Å—Ç–∞—Ç–∫–∏ WB'] * 100).round(2),
    0
)

print("\n–î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
print(comparison.to_string(index=False))

print("\n" + "="*80)
print("–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø (–±–æ–ª–µ–µ 5-10%)")
print("="*80)

problems = []

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–∫–∞–∑–∞—Ö
orders_issues = comparison[abs(comparison['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤']) > 5]
if not orders_issues.empty:
    print("\nüî¥ –ü–†–û–ë–õ–ï–ú–´ –° –ó–ê–ö–ê–ó–ê–ú–ò:")
    for _, row in orders_issues.iterrows():
        problem = {
            'type': 'orders',
            'article': row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'],
            'wb_value': row['–ó–∞–∫–∞–∑—ã WB'],
            'st_value': row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'],
            'diff': row['–†–∞–∑–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤'],
            'percent': row['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤']
        }
        problems.append(problem)
        print(f"\n  –ê—Ä—Ç–∏–∫—É–ª: {row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞']}")
        print(f"  WB –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: {row['–ó–∞–∫–∞–∑—ã WB']} –∑–∞–∫–∞–∑–æ–≤")
        print(f"  Stock Tracker: {row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)']} –∑–∞–∫–∞–∑–æ–≤")
        print(f"  –†–∞–∑–Ω–∏—Ü–∞: {row['–†–∞–∑–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤']} ({row['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤']}%)")
else:
    print("\n‚úÖ –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –∑–∞–∫–∞–∑–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –æ—Å—Ç–∞—Ç–∫–∞—Ö
stock_issues = comparison[abs(comparison['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤']) > 5]
if not stock_issues.empty:
    print("\nüî¥ –ü–†–û–ë–õ–ï–ú–´ –° –û–°–¢–ê–¢–ö–ê–ú–ò:")
    for _, row in stock_issues.iterrows():
        problem = {
            'type': 'stock',
            'article': row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'],
            'wb_value': row['–û—Å—Ç–∞—Ç–∫–∏ WB'],
            'st_value': row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'],
            'diff': row['–†–∞–∑–Ω–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤'],
            'percent': row['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤']
        }
        problems.append(problem)
        print(f"\n  –ê—Ä—Ç–∏–∫—É–ª: {row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞']}")
        print(f"  WB –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: {row['–û—Å—Ç–∞—Ç–∫–∏ WB']} —à—Ç")
        print(f"  Stock Tracker: {row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']} —à—Ç")
        print(f"  –†–∞–∑–Ω–∏—Ü–∞: {row['–†–∞–∑–Ω–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤']} ({row['% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤']}%)")
else:
    print("\n‚úÖ –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –æ—Å—Ç–∞—Ç–∫–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∞—Ä—Ç–∏–∫—É–ª—ã
missing_in_st = comparison[comparison['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'].isna() | (comparison['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'] == 0)]
if not missing_in_st.empty and not missing_in_st['–ó–∞–∫–∞–∑—ã WB'].isna().all():
    print("\n‚ö†Ô∏è –ê–†–¢–ò–ö–£–õ–´ –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ò–õ–ò –ù–ï –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–´ –í STOCK TRACKER:")
    for _, row in missing_in_st.iterrows():
        if pd.notna(row['–ó–∞–∫–∞–∑—ã WB']) and row['–ó–∞–∫–∞–∑—ã WB'] > 0:
            print(f"\n  –ê—Ä—Ç–∏–∫—É–ª: {row['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞']}")
            print(f"  WB –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: {row['–ó–∞–∫–∞–∑—ã WB']} –∑–∞–∫–∞–∑–æ–≤, {row['–û—Å—Ç–∞—Ç–∫–∏ WB']} –æ—Å—Ç–∞—Ç–∫–æ–≤")
            print(f"  Stock Tracker: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

print("\n" + "="*80)
print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú")
print("="*80)

if len(problems) > 0:
    print("\n1. –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–•:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Wildberries")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç sync_stock_data.py –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∞–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏")
    
    print("\n2. –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–û–í:")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å–∫–ª–∞–¥—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–æ–≤/–æ—Å—Ç–∞—Ç–∫–æ–≤")
    
    print("\n3. –§–û–†–ú–£–õ–´ –í GOOGLE SHEETS:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º—É–ª—ã —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–ª–æ–Ω–∫–∞—Ö '–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)' –∏ '–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å–∫–ª–∞–¥–∞ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Ä–∞—Å—á–µ—Ç")
    
    print("\n4. –õ–û–ì–ò–ö–ê –ì–†–£–ü–ü–ò–†–û–í–ö–ò:")
    print("   - WB –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∫–ª–∞–¥—É –æ—Ç–¥–µ–ª—å–Ω–æ")
    print("   - Stock Tracker –¥–æ–ª–∂–µ–Ω —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–∫–ª–∞–¥—ã –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ warehouse_filtering.py –∏ table_generation.py")
    
    print("\n5. –ù–ï–ú–ï–î–õ–ï–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
    print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ run_full_sync.py –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API")
    print("   - –°—Ä–∞–≤–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API –Ω–∞–ø—Ä—è–º—É—é —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ")
else:
    print("\n‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
    print("   –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")

print("\n" + "="*80)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
comparison.to_csv('comparison_report.csv', index=False, encoding='utf-8-sig')
print("\nüìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: comparison_report.csv")
