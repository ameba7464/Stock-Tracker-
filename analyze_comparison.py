import pandas as pd
import numpy as np

print("="*80)
print("–ß–¢–ï–ù–ò–ï –§–ê–ô–õ–û–í")
print("="*80)

# –ß–∏—Ç–∞–µ–º CSV –∏–∑ –≤–ª–æ–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ attachment
wb_data = {
    'Its1_2_3/50g': {'orders': 98, 'stock': 485},  # 20+18+13+13+11+10+5+4+2+2 = 98 –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ CSV
    'Its2/50g': {'orders': 72, 'stock': 500},       # 24+23+8+7+6+3+1 = 72 –∑–∞–∫–∞–∑–∞
    'ItsSport2/50g': {'orders': 34, 'stock': 250},  # 9+9+7+5+1+1+1+1 = 34 –∑–∞–∫–∞–∑–∞
    'Its2/50g+Aks5/20g': {'orders': 20, 'stock': 0},
    'Its1_2_3/50g+Aks5/20g': {'orders': 10, 'stock': 0},
    'Its1_2_3/50g+Aks5/20g.FBS': {'orders': 4, 'stock': 0},
    'ItsSport2/50g+Aks5/20g': {'orders': 8, 'stock': 0},
    'Its1_2_3/50g+AksPoly/20g': {'orders': 5, 'stock': 96},
    'Its1_2_3/50g+AksRecov/20g': {'orders': 0, 'stock': 2},
    'Its2/50g+AksDef/20g': {'orders': 3, 'stock': 0},
    'ItsSport2/50g+Aks5/20g.FBS': {'orders': 2, 'stock': 0},
    'Its2/50g+Aks5/20g.FBS': {'orders': 3, 'stock': 0},
}

# –ß–∏—Ç–∞–µ–º Stock Tracker –¥–∞–Ω–Ω—ã–µ
st_df = pd.read_csv('Stock Tracker - Stock Tracker (1).csv', encoding='utf-8')

print("\n–î–∞–Ω–Ω—ã–µ –∏–∑ Stock Tracker:")
print(st_df[['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)', '–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)']].to_string(index=False))

print("\n" + "="*80)
print("–°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•")
print("="*80)

problems = []
total_issues = 0

for article, wb_values in wb_data.items():
    st_row = st_df[st_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    
    if st_row.empty:
        print(f"\n‚ö†Ô∏è –ê—Ä—Ç–∏–∫—É–ª {article} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Stock Tracker")
        continue
    
    st_orders = float(str(st_row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'].values[0]).replace(',', '.'))
    st_stock = float(str(st_row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'].values[0]).replace(',', '.'))
    
    wb_orders = wb_values['orders']
    wb_stock = wb_values['stock']
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    orders_diff = wb_orders - st_orders
    stock_diff = wb_stock - st_stock
    
    orders_percent = (orders_diff / wb_orders * 100) if wb_orders != 0 else 0
    stock_percent = (stock_diff / wb_stock * 100) if wb_stock != 0 else 0
    
    has_issue = False
    
    print(f"\n{'='*60}")
    print(f"–ê—Ä—Ç–∏–∫—É–ª: {article}")
    print(f"{'='*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
    if abs(orders_percent) > 5:
        has_issue = True
        total_issues += 1
        print(f"üî¥ –ü–†–û–ë–õ–ï–ú–ê –° –ó–ê–ö–ê–ó–ê–ú–ò:")
        print(f"   WB:           {wb_orders} –∑–∞–∫–∞–∑–æ–≤")
        print(f"   Stock Tracker: {st_orders} –∑–∞–∫–∞–∑–æ–≤")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞:       {orders_diff} ({orders_percent:.2f}%)")
        problems.append({
            'article': article,
            'type': 'orders',
            'wb': wb_orders,
            'st': st_orders,
            'diff': orders_diff,
            'percent': orders_percent
        })
    else:
        print(f"‚úÖ –ó–∞–∫–∞–∑—ã: WB={wb_orders}, ST={st_orders} (—Ä–∞–∑–Ω–∏—Ü–∞ {orders_percent:.2f}%)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏
    if abs(stock_percent) > 5:
        has_issue = True
        total_issues += 1
        print(f"üî¥ –ü–†–û–ë–õ–ï–ú–ê –° –û–°–¢–ê–¢–ö–ê–ú–ò:")
        print(f"   WB:            {wb_stock} —à—Ç")
        print(f"   Stock Tracker: {st_stock} —à—Ç")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞:       {stock_diff} ({stock_percent:.2f}%)")
        problems.append({
            'article': article,
            'type': 'stock',
            'wb': wb_stock,
            'st': st_stock,
            'diff': stock_diff,
            'percent': stock_percent
        })
    else:
        print(f"‚úÖ –û—Å—Ç–∞—Ç–∫–∏: WB={wb_stock}, ST={st_stock} (—Ä–∞–∑–Ω–∏—Ü–∞ {stock_percent:.2f}%)")

print("\n" + "="*80)
print(f"–ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {total_issues} –ø—Ä–æ–±–ª–µ–º(—ã)")
print("="*80)

if len(problems) > 0:
    print("\n" + "="*80)
    print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú")
    print("="*80)
    
    print("\n1Ô∏è‚É£ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–•:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —Ä–µ-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é: python run_full_sync.py")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Wildberries API")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ sync_stock_data.py –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–û–í:")
    print("   ‚Ä¢ –§–∞–π–ª warehouse_filtering.py - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–∫–ª–∞–¥–æ–≤")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ç–∏–ø—ã —Å–∫–ª–∞–¥–æ–≤ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è (–ë–∞–ª–∞–Ω—Å, –ê–∫—Ç—É–∞–ª—å–Ω—ã–π, –ù–µ–ª–∏–∫–≤–∏–¥)")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∏—Å–∫–ª—é—á–∞—é—Ç—Å—è –ª–∏ —Å–∫–ª–∞–¥—ã —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏")
    
    print("\n3Ô∏è‚É£ –§–û–†–ú–£–õ–´ –í GOOGLE SHEETS:")
    print("   ‚Ä¢ –ö–æ–ª–æ–Ω–∫–∞ '–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)' –¥–æ–ª–∂–Ω–∞ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –í–°–ï —Å—Ç—Ä–æ–∫–∏ —Å–∫–ª–∞–¥–∞")
    print("   ‚Ä¢ –ö–æ–ª–æ–Ω–∫–∞ '–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)' –¥–æ–ª–∂–Ω–∞ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –í–°–ï –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã SUMIF/SUMIFS —Ñ–æ—Ä–º—É–ª")
    
    print("\n4Ô∏è‚É£ –õ–û–ì–ò–ö–ê –ì–†–£–ü–ü–ò–†–û–í–ö–ò –î–ê–ù–ù–´–•:")
    print("   ‚Ä¢ WB –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ü–û –ö–ê–ñ–î–û–ú–£ –°–ö–õ–ê–î–£ –æ—Ç–¥–µ–ª—å–Ω–æ")
    print("   ‚Ä¢ Stock Tracker –¥–æ–ª–∂–µ–Ω –ê–ì–†–ï–ì–ò–†–û–í–ê–¢–¨ –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é generate_main_table() –≤ table_generation.py")
    
    print("\n5Ô∏è‚É£ –í–†–ï–ú–ï–ù–ù–´–ï –ú–ï–¢–ö–ò:")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è")
    print("   ‚Ä¢ WB CSV –æ—Ç 27-10-2025, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Stock Tracker")
    print("   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —É—Å—Ç–∞—Ä–µ–ª–∏")
    
    print("\n6Ô∏è‚É£ –ù–ï–ú–ï–î–õ–ï–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
    print("   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–∞)")
    print("   ‚Ä¢ –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –æ–¥–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞")
    print("   ‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ä—É—á–Ω—É—é —Å –¥–∞–Ω–Ω—ã–º–∏ WB")
    print("   ‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é")
    
    print("\n7Ô∏è‚É£ –ö–û–î –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_warehouse_filtering.py")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_stock_tracker_validation.py")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: check_sheets_after_sync.py")
else:
    print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("   –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–Ω–µ–µ 5%, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã.")
    print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π:")
    print("   - –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("   - –û–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö")
    print("   - –ó–∞–∫–∞–∑—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

print("\n" + "="*80)
print("–î–ï–¢–ê–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê –°–†–ê–í–ù–ï–ù–ò–Ø")
print("="*80)

comparison_data = []
for article, wb_values in wb_data.items():
    st_row = st_df[st_df['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞'] == article]
    if not st_row.empty:
        st_orders = float(str(st_row['–ó–∞–∫–∞–∑—ã (–≤—Å–µ–≥–æ)'].values[0]).replace(',', '.'))
        st_stock = float(str(st_row['–û—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ–≥–æ)'].values[0]).replace(',', '.'))
        
        comparison_data.append({
            '–ê—Ä—Ç–∏–∫—É–ª': article,
            'WB –ó–∞–∫–∞–∑—ã': wb_values['orders'],
            'ST –ó–∞–∫–∞–∑—ã': st_orders,
            '–†–∞–∑–Ω–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤': wb_values['orders'] - st_orders,
            '% –∑–∞–∫–∞–∑—ã': f"{((wb_values['orders'] - st_orders) / wb_values['orders'] * 100) if wb_values['orders'] != 0 else 0:.2f}%",
            'WB –û—Å—Ç–∞—Ç–∫–∏': wb_values['stock'],
            'ST –û—Å—Ç–∞—Ç–∫–∏': st_stock,
            '–†–∞–∑–Ω–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤': wb_values['stock'] - st_stock,
            '% –æ—Å—Ç–∞—Ç–∫–∏': f"{((wb_values['stock'] - st_stock) / wb_values['stock'] * 100) if wb_values['stock'] != 0 else 0:.2f}%",
        })

comparison_df = pd.DataFrame(comparison_data)
print("\n" + comparison_df.to_string(index=False))

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
comparison_df.to_csv('comparison_report.csv', index=False, encoding='utf-8-sig')
print("\n\nüìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: comparison_report.csv")
