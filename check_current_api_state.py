"""
–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è API –¥–ª—è ItsSport2/50g
"""
import sys
import requests
from pathlib import Path
from datetime import datetime, timedelta

sys.path.insert(0, str(Path(__file__).parent / 'src'))

from stock_tracker.utils.config import get_config
from stock_tracker.services.dual_api_stock_fetcher import DualAPIStockFetcher

def check_current_api_state():
    """–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è API"""
    
    print("\n" + "="*100)
    print("–ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ò–• –î–ê–ù–ù–´–• API –î–õ–Ø ItsSport2/50g")
    print("="*100)
    
    config = get_config()
    api_key = config.wildberries_api_key
    
    # –°–æ–∑–¥–∞—ë–º fetcher
    fetcher = DualAPIStockFetcher(api_key)
    
    target_article = 'ItsSport2/50g'
    
    print(f"\nüéØ –ê—Ä—Ç–∏–∫—É–ª: {target_article}")
    print(f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("-" * 100)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º FBO stocks
    print("\n1Ô∏è‚É£ STATISTICS API V1 (FBO)")
    print("   URL: https://statistics-api.wildberries.ru/api/v1/supplier/stocks")
    
    fbo_stocks = fetcher.get_fbo_stocks()
    article_fbo = [s for s in fbo_stocks if s.get('subject') == target_article]
    
    if article_fbo:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(article_fbo)} –∑–∞–ø–∏—Å–µ–π FBO")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å–∫–ª–∞–¥–∞–º
        warehouses = {}
        barcodes = set()
        
        for stock in article_fbo:
            wh = stock.get('warehouseName', '')
            qty = stock.get('quantityFull', 0)
            barcode = stock.get('barcode', '')
            
            barcodes.add(barcode)
            
            if wh not in warehouses:
                warehouses[wh] = 0
            warehouses[wh] += qty
        
        print(f"\n   üì¶ –°–∫–ª–∞–¥—ã:")
        for wh, qty in sorted(warehouses.items()):
            print(f"      {wh}: {qty} –µ–¥.")
        
        print(f"\n   üè∑Ô∏è –ë–∞—Ä–∫–æ–¥—ã: {', '.join(barcodes)}")
        
        barcodes_list = list(barcodes)
    else:
        print(f"   ‚ùå –ù–ï–¢ –¥–∞–Ω–Ω—ã—Ö FBO –¥–ª—è {target_article}")
        barcodes_list = []
    
    # 2. –ü–æ–ª—É—á–∞–µ–º FBS stocks
    print(f"\n2Ô∏è‚É£ MARKETPLACE API V3 (FBS)")
    print("   URL: https://marketplace-api.wildberries.ru/api/v3/warehouses")
    
    fbs_warehouses = fetcher.get_fbs_warehouses()
    print(f"   üìä –í—Å–µ–≥–æ FBS —Å–∫–ª–∞–¥–æ–≤: {len(fbs_warehouses)}")
    
    if barcodes_list:
        fbs_stocks_dict = fetcher.get_fbs_stocks(barcodes_list)
        
        if fbs_stocks_dict:
            print(f"\n   üì¶ FBS –æ—Å—Ç–∞—Ç–∫–∏:")
            
            for wh_id, wh_data in fbs_stocks_dict.items():
                wh_name = wh_data.get('warehouse_name', '')
                stocks = wh_data.get('stocks', [])
                
                total = sum(s.get('amount', 0) for s in stocks)
                
                if total > 0:
                    print(f"      {wh_name}: {total} –µ–¥.")
                    for s in stocks:
                        print(f"         –ë–∞—Ä–∫–æ–¥ {s.get('sku')}: {s.get('amount')} –µ–¥.")
        else:
            print(f"   ‚ùå –ù–ï–¢ –¥–∞–Ω–Ω—ã—Ö FBS –¥–ª—è {target_article}")
    else:
        print(f"   ‚ö†Ô∏è –ù–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å FBS - –Ω–µ—Ç –±–∞—Ä–∫–æ–¥–æ–≤")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º combined stocks
    print(f"\n3Ô∏è‚É£ COMBINED STOCKS (FBO + FBS —á–µ—Ä–µ–∑ DualAPIStockFetcher)")
    
    try:
        combined = fetcher.get_combined_stocks_by_article(target_article)
        
        if target_article in combined:
            data = combined[target_article]
            
            print(f"\n   ‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
            print(f"      NM ID: {data.get('nm_id')}")
            print(f"      –ë–∞—Ä–∫–æ–¥—ã: {data.get('barcodes')}")
            print(f"      FBO –æ—Å—Ç–∞—Ç–∫–∏: {data.get('fbo_stock', 0)}")
            print(f"      FBS –æ—Å—Ç–∞—Ç–∫–∏: {data.get('fbs_stock', 0)}")
            print(f"      –í–°–ï–ì–û: {data.get('total_stock', 0)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º
            if data.get('fbo_details'):
                print(f"\n   üì¶ FBO —Å–∫–ª–∞–¥—ã (–¥–µ—Ç–∞–ª–∏):")
                fbo_wh = {}
                for d in data['fbo_details']:
                    wh = d.get('warehouse_name', '')
                    qty = d.get('quantity', 0)
                    if wh not in fbo_wh:
                        fbo_wh[wh] = 0
                    fbo_wh[wh] += qty
                
                for wh, qty in sorted(fbo_wh.items()):
                    print(f"      {wh}: {qty} –µ–¥.")
            
            if data.get('fbs_details'):
                print(f"\n   üì¶ FBS —Å–∫–ª–∞–¥—ã (–¥–µ—Ç–∞–ª–∏):")
                fbs_wh = {}
                for d in data['fbs_details']:
                    wh = d.get('warehouse_name', '')
                    qty = d.get('quantity', 0)
                    if wh not in fbs_wh:
                        fbs_wh[wh] = 0
                    fbs_wh[wh] += qty
                
                for wh, qty in sorted(fbs_wh.items()):
                    print(f"      {wh}: {qty} –µ–¥.")
        else:
            print(f"   ‚ùå –ù–ï–¢ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {target_article}")
    
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print("\n" + "="*100)
    print("üîç –ò–¢–û–ì–ò:")
    print("="*100)
    print(f"\n1. Statistics API (FBO): {'–î–ê' if article_fbo else '–ù–ï–¢'} –¥–∞–Ω–Ω—ã—Ö")
    print(f"2. Marketplace API (FBS): {'–î–ê' if barcodes_list and fbs_stocks_dict else '–ù–ï–¢'} –¥–∞–Ω–Ω—ã—Ö")
    print(f"3. Google Sheets: –ü–£–°–¢–û (1 –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)")
    print(f"\n‚ùó –ï—Å–ª–∏ API –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Å–∫–ª–∞–¥–µ '–ù–æ–≤–æ—Å–µ–º–µ–π–∫–∏–Ω–æ' –∏–ª–∏ '–°–∞–º–∞—Ä–∞ (–ù–æ–≤–æ—Å–µ–º–µ–π–∫–∏–Ω–æ)',")
    print(f"   –∑–Ω–∞—á–∏—Ç —ç—Ç–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –±–æ–ª—å—à–µ –ù–ï–¢ –Ω–∞ WB!")
    print("="*100 + "\n")

if __name__ == '__main__':
    check_current_api_state()
