#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.

–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å WB ground truth.
"""

import sys
import os

sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from stock_tracker.database.sheets import GoogleSheetsClient
from stock_tracker.database.operations import SheetsOperations
from stock_tracker.utils.config import get_config
from stock_tracker.utils.logger import get_logger

logger = get_logger(__name__)

def check_table_results():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è."""
    try:
        print("=" * 80)
        print("–ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
        print("=" * 80)
        
        config = get_config()
        spreadsheet_id = config.google_sheet_id
        
        service_account_path = os.path.join(os.path.dirname(__file__), 'config', 'service-account.json')
        sheets_client = GoogleSheetsClient(service_account_path)
        operations = SheetsOperations(sheets_client)
        
        print("\nüìä –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã...")
        
        # –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        main_products = [
            ('Its1_2_3/50g', 163383326),  # WB: 97 –∑–∞–∫–∞–∑–æ–≤
            ('Its2/50g', 163383327),       # WB: 68 –∑–∞–∫–∞–∑–æ–≤
            ('ItsSport2/50g', 163383328)   # WB: 23 –∑–∞–∫–∞–∑–æ–≤
        ]
        
        print("\n" + "=" * 80)
        print("–°–†–ê–í–ù–ï–ù–ò–ï –° WB GROUND TRUTH (22-28 –æ–∫—Ç)")
        print("=" * 80)
        print(f"{'–¢–æ–≤–∞—Ä':<20} {'WB Truth':<12} {'–¢–∞–±–ª–∏—Ü–∞':<12} {'–†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ':<15} {'–°—Ç–∞—Ç—É—Å'}")
        print("-" * 80)
        
        wb_ground_truth = {
            'Its1_2_3/50g': 97,
            'Its2/50g': 68,
            'ItsSport2/50g': 23
        }
        
        all_good = True
        total_table_orders = 0
        total_wb_orders = 0
        
        for seller_article, wb_article in main_products:
            try:
                product = operations.read_product(spreadsheet_id, seller_article)
                
                if product:
                    table_orders = product.total_orders
                    wb_orders = wb_ground_truth.get(seller_article, 0)
                    
                    total_table_orders += table_orders
                    total_wb_orders += wb_orders
                    
                    if wb_orders > 0:
                        diff_percent = abs(table_orders - wb_orders) / wb_orders * 100
                        diff_str = f"{diff_percent:+.1f}%"
                        
                        if diff_percent <= 10:
                            status = "‚úÖ OK"
                        elif diff_percent <= 20:
                            status = "‚ö†Ô∏è WARNING"
                            all_good = False
                        else:
                            status = "‚ùå FAIL"
                            all_good = False
                    else:
                        diff_str = "N/A"
                        status = "‚ùì"
                    
                    print(f"{seller_article:<20} {wb_orders:<12} {table_orders:<12} {diff_str:<15} {status}")
                else:
                    print(f"{seller_article:<20} {'N/A':<12} {'NOT FOUND':<12} {'N/A':<15} ‚ùå MISSING")
                    all_good = False
                    
            except Exception as e:
                print(f"{seller_article:<20} {'N/A':<12} {'ERROR':<12} {str(e)[:15]:<15} ‚ùå ERROR")
                all_good = False
        
        print("-" * 80)
        print(f"{'–ò–¢–û–ì–û':<20} {total_wb_orders:<12} {total_table_orders:<12}")
        
        print("\n" + "=" * 80)
        print("–†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò")
        print("=" * 80)
        
        if all_good:
            print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
            print("   –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å WB ground truth –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 10%")
            print("   –¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Orders API v1")
        else:
            print("‚ö†Ô∏è –ï–°–¢–¨ –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø")
            print("   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç WB ground truth")
            print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –†–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã (—Ç–∞–±–ª–∏—Ü–∞: –Ω–µ–¥–µ–ª—è, WB: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞—Ç—ã)")
            print("   - API –≤–µ—Ä–Ω—É–ª —á–∞—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            print("   - –ö–≤–æ—Ç–∞ Google Sheets –∏—Å—á–µ—Ä–ø–∞–Ω–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏)")
        
        print("\n" + "=" * 80)
        print("–î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
        print("=" * 80)
        
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        all_products = []
        for seller_article, _ in main_products:
            try:
                product = operations.read_product(spreadsheet_id, seller_article)
                if product:
                    all_products.append(product)
            except:
                pass
        
        if all_products:
            total_stock = sum(p.total_stock for p in all_products)
            total_orders = sum(p.total_orders for p in all_products)
            
            print(f"\n–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_products)}")
            print(f"–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {total_stock}")
            print(f"–û–±—â–µ–µ –∫–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤: {total_orders}")
            
            print("\n–¢–æ–ø —Ç–æ–≤–∞—Ä—ã –ø–æ –∑–∞–∫–∞–∑–∞–º:")
            sorted_products = sorted(all_products, key=lambda p: p.total_orders, reverse=True)
            for i, product in enumerate(sorted_products[:5], 1):
                print(f"  {i}. {product.seller_article}: {product.total_orders} –∑–∞–∫–∞–∑–æ–≤, {product.total_stock} –æ—Å—Ç–∞—Ç–æ–∫")
        
        return all_good
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = check_table_results()
    sys.exit(0 if success else 1)
