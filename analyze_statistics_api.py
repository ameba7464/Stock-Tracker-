#!/usr/bin/env python3
"""
Collect ALL warehouse records for Its1_2_3/50g from Statistics API
"""

import requests
import json
from stock_tracker.utils.config import get_config

def main():
    config = get_config()
    
    url = "https://statistics-api.wildberries.ru/api/v1/supplier/stocks"
    params = {'dateFrom': '2025-10-27'}
    headers = {
        'Authorization': config.wildberries_api_key,
        'Content-Type': 'application/json'
    }
    
    print("\n" + "="*100)
    print("üìä –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó: Its1_2_3/50g –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º (Statistics API)")
    print("="*100)
    
    response = requests.get(url, headers=headers, params=params, timeout=30)
    data = response.json()
    
    # Find all records for Its1_2_3/50g
    records = [r for r in data if r.get('supplierArticle') == 'Its1_2_3/50g']
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(records)}")
    print("\n" + "-"*100)
    print(f"{'–°–∫–ª–∞–¥':<40} {'quantity':<12} {'quantityFull':<15} {'inWayToClient':<15} {'inWayFromClient':<15}")
    print("-"*100)
    
    total_quantity = 0
    total_quantity_full = 0
    total_in_way_to = 0
    total_in_way_from = 0
    
    warehouse_data = []
    
    for record in records:
        warehouse = record.get('warehouseName', 'Unknown')
        qty = record.get('quantity', 0)
        qty_full = record.get('quantityFull', 0)
        in_way_to = record.get('inWayToClient', 0)
        in_way_from = record.get('inWayFromClient', 0)
        
        warehouse_data.append((warehouse, qty, qty_full, in_way_to, in_way_from))
        
        total_quantity += qty
        total_quantity_full += qty_full
        total_in_way_to += in_way_to
        total_in_way_from += in_way_from
    
    # Sort by quantity_full descending
    warehouse_data.sort(key=lambda x: x[2], reverse=True)
    
    for warehouse, qty, qty_full, in_way_to, in_way_from in warehouse_data:
        if qty > 0 or qty_full > 0 or in_way_to > 0 or in_way_from > 0:
            print(f"{warehouse:<40} {qty:<12,} {qty_full:<15,} {in_way_to:<15,} {in_way_from:<15,}")
    
    print("-"*100)
    print(f"{'–ò–¢–û–ì–û:':<40} {total_quantity:<12,} {total_quantity_full:<15,} {total_in_way_to:<15,} {total_in_way_from:<15,}")
    print("="*100)
    
    # Analysis
    print("\nüìä –ê–ù–ê–õ–ò–ó:")
    print("-"*100)
    print(f"quantity (—Å–≤–æ–±–æ–¥–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏):        {total_quantity:>6,} —à—Ç")
    print(f"quantityFull (–ø–æ–ª–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏):       {total_quantity_full:>6,} —à—Ç")
    print(f"inWayToClient (–≤ –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É):    {total_in_way_to:>6,} —à—Ç")
    print(f"inWayFromClient (–≤ –ø—É—Ç–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞): {total_in_way_from:>6,} —à—Ç")
    print("-"*100)
    
    # Compare with CSV
    csv_total = 3478
    
    print(f"\nüìã –°–†–ê–í–ù–ï–ù–ò–ï –° CSV:")
    print("-"*100)
    print(f"CSV —ç–∫—Å–ø–æ—Ä—Ç:                         {csv_total:>6,} —à—Ç")
    print(f"Statistics API (quantity):           {total_quantity:>6,} —à—Ç")
    print(f"Statistics API (quantityFull):       {total_quantity_full:>6,} —à—Ç")
    print(f"–°—É–º–º–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π:                    {total_quantity + total_quantity_full + total_in_way_to + total_in_way_from:>6,} —à—Ç")
    print("-"*100)
    
    # Which field matches?
    if abs(total_quantity_full - csv_total) < 100:
        print(f"\n‚úÖ –ù–ê–ô–î–ï–ù–û! quantityFull ({total_quantity_full:,}) ‚âà CSV ({csv_total:,})")
        print("   ‚Üí –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ quantityFull –¥–ª—è —Ç–æ—á–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤")
    elif abs(total_quantity - csv_total) < 100:
        print(f"\n‚úÖ –ù–ê–ô–î–ï–ù–û! quantity ({total_quantity:,}) ‚âà CSV ({csv_total:,})")
        print("   ‚Üí –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ quantity –¥–ª—è —Ç–æ—á–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤")
    else:
        diff_full = abs(total_quantity_full - csv_total)
        diff_qty = abs(total_quantity - csv_total)
        print(f"\n‚ö†Ô∏è –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ:")
        print(f"   quantityFull: —Ä–∞–∑–Ω–∏—Ü–∞ {diff_full:,} —à—Ç ({diff_full/csv_total*100:.1f}%)")
        print(f"   quantity: —Ä–∞–∑–Ω–∏—Ü–∞ {diff_qty:,} —à—Ç ({diff_qty/csv_total*100:.1f}%)")
    
    print("\n" + "="*100)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    print("="*100)
    
    if total_quantity_full > 0 or total_quantity > 0:
        print("\n‚úÖ Statistics API –†–ê–ë–û–¢–ê–ï–¢ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ!")
        print("\nüí° –†–ï–®–ï–ù–ò–ï:")
        print("   1. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è —Å warehouse_remains –Ω–∞ Statistics API")
        print("   2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–µ 'quantityFull' –¥–ª—è –ø–æ–ª–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤")
        print("   3. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞")
        print("\nüìù –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ:")
        print("   - –ó–∞–º–µ–Ω–∏—Ç—å client.download_warehouse_remains()")
        print("   - –ù–∞ requests.get('statistics-api.wildberries.ru/api/v1/supplier/stocks')")
        print("   - –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ supplierArticle –∏ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å quantityFull")
    else:
        print("\n‚ö†Ô∏è Statistics API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω—É–ª–∏")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–µ–Ω –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä dateFrom –∏–ª–∏ –¥—Ä—É–≥–æ–π endpoint")

if __name__ == "__main__":
    main()
