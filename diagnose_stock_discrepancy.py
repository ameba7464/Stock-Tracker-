#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è Its1_2_3/50g (nmId: 163383326)

–ü—Ä–æ–±–ª–µ–º–∞: 
- WB –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 3,459 –æ—Å—Ç–∞—Ç–∫–æ–≤ (–≤—Å–µ–≥–æ) + 2,984 –ú–ü
- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 475 –æ—Å—Ç–∞—Ç–∫–æ–≤ (–≤—Å–µ–≥–æ)

–ü—Ä–∏—á–∏–Ω–∞:
- Warehouse API v1 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–õ–¨–ö–û –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö WB (FBO)
- –ù–ï –≤–∫–ª—é—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ FBS/–ú–ü (–Ω–∞ —Å–∫–ª–∞–¥–µ –ø—Ä–æ–¥–∞–≤—Ü–∞)
- Analytics API v2 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ü–û–õ–ù–´–ï –æ—Å—Ç–∞—Ç–∫–∏ (FBO + FBS/–ú–ü)

–†–µ—à–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Analytics API v2 –¥–ª—è total_stock
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Warehouse API v1 –¥–ª—è breakdown –ø–æ —Å–∫–ª–∞–¥–∞–º FBO
- –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É "–ú–ü/FBS" —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ = total_stock - sum(FBO stocks)
"""

import sys
import os
import asyncio
from datetime import datetime

sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from stock_tracker.utils.config import get_config
from stock_tracker.api.client import WildberriesAPIClient
from stock_tracker.utils.logger import get_logger

logger = get_logger(__name__)


async def diagnose_stock_discrepancy():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è Its1_2_3/50g"""
    
    print("\n" + "=" * 80)
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø –û–°–¢–ê–¢–ö–û–í")
    print("=" * 80)
    print(f"–¢–æ–≤–∞—Ä: Its1_2_3/50g")
    print(f"WB Article (nmId): 163383326")
    print(f"–ü—Ä–æ–±–ª–µ–º–∞: –û—Å—Ç–∞—Ç–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ (475) != –û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ WB (3,459)")
    print("=" * 80)
    
    config = get_config()
    wb_client = WildberriesAPIClient(config)
    
    target_nm_id = 163383326
    target_vendor_code = "Its1_2_3/50g"
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Warehouse API v1 (—Ç–µ–∫—É—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫)
    print("\nüì¶ –®–ê–ì 1: Warehouse API v1 (—Ç–µ–∫—É—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö)")
    print("-" * 80)
    
    try:
        task_id = await wb_client.create_warehouse_remains_task()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {task_id}")
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        await asyncio.sleep(60)
        
        warehouse_data = await wb_client.download_warehouse_remains(task_id)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(warehouse_data)}")
        
        # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—à —Ç–æ–≤–∞—Ä
        target_product_v1 = None
        for item in warehouse_data:
            if item.get('nmId') == target_nm_id:
                target_product_v1 = item
                break
        
        if target_product_v1:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –≤ Warehouse API v1:")
            print(f"   nmId: {target_product_v1.get('nmId')}")
            print(f"   vendorCode: {target_product_v1.get('vendorCode')}")
            
            warehouses_v1 = target_product_v1.get('warehouses', [])
            print(f"\n   –°–∫–ª–∞–¥—ã ({len(warehouses_v1)}):")
            
            total_v1_stock = 0
            fbo_stock = 0
            
            for wh in warehouses_v1:
                wh_name = wh.get('warehouseName', '')
                wh_qty = wh.get('quantity', 0)
                
                print(f"   - {wh_name:<40} {wh_qty:>6}")
                
                # –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã (–Ω–µ —Å–ª—É–∂–µ–±–Ω—ã–µ)
                if wh_name not in ("–í –ø—É—Ç–∏ –¥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π", "–í –ø—É—Ç–∏ –≤–æ–∑–≤—Ä–∞—Ç—ã –Ω–∞ —Å–∫–ª–∞–¥ WB", 
                                   "–í—Å–µ–≥–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö"):
                    fbo_stock += wh_qty
                
                total_v1_stock += wh_qty
            
            print(f"\n   üìä –ò–¢–û–ì–û –∏–∑ Warehouse API v1:")
            print(f"   - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ warehouses: {total_v1_stock}")
            print(f"   - FBO –æ—Å—Ç–∞—Ç–∫–∏ (—Ä–µ–∞–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã): {fbo_stock}")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Warehouse API v1")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Warehouse API v1: {e}")
        warehouse_data = []
        target_product_v1 = None
        fbo_stock = 0
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Analytics API v2 (–ø–æ–ª–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏)
    print("\nüìä –®–ê–ì 2: Analytics API v2 (–ø–æ–ª–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ FBO + FBS)")
    print("-" * 80)
    
    try:
        analytics_data = await wb_client.get_all_product_stock_data()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(analytics_data)}")
        
        # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—à —Ç–æ–≤–∞—Ä
        target_product_v2 = None
        for item in analytics_data:
            if item.get('nmID') == target_nm_id:
                target_product_v2 = item
                break
        
        if target_product_v2:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –≤ Analytics API v2:")
            print(f"   nmID: {target_product_v2.get('nmID')}")
            print(f"   vendorCode: {target_product_v2.get('vendorCode')}")
            
            metrics = target_product_v2.get('metrics', {})
            total_v2_stock = metrics.get('stockCount', 0)
            total_v2_orders = metrics.get('ordersCount', 0)
            
            print(f"\n   üìä –ú–ï–¢–†–ò–ö–ò –∏–∑ Analytics API v2:")
            print(f"   - stockCount (–≤—Å–µ–≥–æ –æ—Å—Ç–∞—Ç–∫–æ–≤): {total_v2_stock}")
            print(f"   - ordersCount (–≤—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤): {total_v2_orders}")
        else:
            print(f"‚ùå –¢–æ–≤–∞—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Analytics API v2")
            total_v2_stock = 0
            total_v2_orders = 0
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Analytics API v2: {e}")
        total_v2_stock = 0
        total_v2_orders = 0
    
    # 3. –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
    print("\nüîç –®–ê–ì 3: –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø")
    print("=" * 80)
    
    if target_product_v1 and target_product_v2:
        print(f"\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   Analytics API v2 (–ø–æ–ª–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏):  {total_v2_stock:>6}")
        print(f"   Warehouse API v1 (FBO –æ—Å—Ç–∞—Ç–∫–∏):     {fbo_stock:>6}")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞ (FBS/–ú–ü –æ—Å—Ç–∞—Ç–∫–∏):           {total_v2_stock - fbo_stock:>6}")
        
        fbs_stock = total_v2_stock - fbo_stock
        fbs_percentage = (fbs_stock / total_v2_stock * 100) if total_v2_stock > 0 else 0
        
        print(f"\nüí° –í–´–í–û–î:")
        print(f"   ‚úÖ FBO (—Å–∫–ª–∞–¥—ã WB):     {fbo_stock:>6} ({100 - fbs_percentage:.1f}%)")
        print(f"   ‚úÖ FBS/–ú–ü (—Å–≤–æ–π —Å–∫–ª–∞–¥): {fbs_stock:>6} ({fbs_percentage:.1f}%)")
        print(f"   üì¶ –í–°–ï–ì–û:               {total_v2_stock:>6} (100%)")
        
        print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
        print(f"   1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Analytics API v2 –¥–ª—è total_stock ({total_v2_stock})")
        print(f"   2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Warehouse API v1 –¥–ª—è breakdown –ø–æ FBO —Å–∫–ª–∞–¥–∞–º")
        print(f"   3. –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É '–ú–ü/FBS' —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ {fbs_stock}")
        
    else:
        print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    
    print("\n" + "=" * 80)
    print("‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 80)


if __name__ == "__main__":
    asyncio.run(diagnose_stock_discrepancy())
